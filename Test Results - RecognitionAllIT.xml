<?xml version="1.0" encoding="UTF-8"?><testrun duration="126135" footerText="Generated by IntelliJ IDEA on 4/2/18 11:45 PM" name="RecognitionAllIT">
    <count name="total" value="194"/>
    <count name="failed" value="50"/>
    <count name="passed" value="144"/>
    <config nameIsGenerated="true" configId="JUnit" name="RecognitionAllIT">
        <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea">
            <pattern>
                <option name="PATTERN" value="net.sf.javaanpr.test.*"/>
                <option name="ENABLED" value="true"/>
            </pattern>
        </extension>
        <module name="javaanpr"/>
        <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false"/>
        <option name="ALTERNATIVE_JRE_PATH"/>
        <option name="PACKAGE_NAME" value="net.sf.javaanpr.test"/>
        <option name="MAIN_CLASS_NAME" value="net.sf.javaanpr.test.RecognitionAllIT"/>
        <option name="METHOD_NAME"/>
        <option name="TEST_OBJECT" value="class"/>
        <option name="VM_PARAMETERS" value="-ea"/>
        <option name="PARAMETERS"/>
        <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%"/>
        <option name="ENV_VARIABLES"/>
        <option name="PASS_PARENT_ENVS" value="true"/>
        <option name="TEST_SEARCH_SCOPE">
            <value defaultName="singleModule"/>
        </option>
        <envs/>
        <patterns/>
    </config>
    <suite duration="126135" locationUrl="java:suite://net.sf.javaanpr.test.RecognitionAllIT" name="RecognitionAllIT" status="failed">
        <suite duration="65603" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="Should check is licensplates are equal to testresults" status="failed">
            <test duration="1902" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="1 =&gt; image=test_001.jpg extpected=PP587AO" status="failed">
                <output type="stdout">23:36:13.798 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3f270e0a with form slovensko_nova and offset 0.
23:36:13.810 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding PP587A0 with required changes 0.0.
23:36:13.810 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3f270e0a with form ceskoslovenska_novsia and offset 0.
23:36:13.810 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding PPG8740 with required changes 2.5413024.
23:36:13.810 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3f270e0a with form ceska_nova and offset 0.
23:36:13.811 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8P58740 with required changes 2.611884.
23:36:13.811 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : PP587A0 with required changes 0.0.
23:36:13.811 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : PPG8740 with required changes 2.5413024.
23:36:13.811 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8P58740 with required changes 2.611884.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;PP587A0&amp;quot;
     but: was &amp;quot;PP587AO&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">PP587A0
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">PP587AO
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="857" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="2 =&gt; image=test_002.jpg extpected=RK755AJ" status="passed">
                <output type="stdout">23:36:14.698 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@64ba3208 with form slovensko_nova and offset 0.
23:36:14.698 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK755AJ with required changes 0.0.
23:36:14.698 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@64ba3208 with form ceskoslovenska_novsia and offset 0.
23:36:14.698 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKT5543 with required changes 3.80859.
23:36:14.698 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@64ba3208 with form ceska_nova and offset 0.
23:36:14.698 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K75543 with required changes 3.9295979.
23:36:14.698 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK755AJ with required changes 0.0.
23:36:14.699 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKT5543 with required changes 3.80859.
23:36:14.699 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K75543 with required changes 3.9295979.
</output>
            </test>
            <test duration="459" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="3 =&gt; image=test_003.jpg extpected=SI819AK" status="passed">
                <output type="stdout">23:36:15.163 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@63fdab07 with form slovensko_nova and offset 0.
23:36:15.163 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding SI819AK with required changes 0.0.
23:36:15.163 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@63fdab07 with form ceskoslovenska_novsia and offset 0.
23:36:15.163 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding SIB1946 with required changes 3.9096615.
23:36:15.163 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@63fdab07 with form ceska_nova and offset 0.
23:36:15.163 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 9A81946 with required changes 5.2543335.
23:36:15.164 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : SI819AK with required changes 0.0.
23:36:15.164 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : SIB1946 with required changes 3.9096615.
23:36:15.164 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 9A81946 with required changes 5.2543335.
</output>
            </test>
            <test duration="633" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="4 =&gt; image=test_004.jpg extpected=RK115AN" status="passed">
                <output type="stdout">23:36:15.798 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a5bd950 with form slovensko_nova and offset 0.
23:36:15.799 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding FR611GA with required changes 2.6575527.
23:36:15.799 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a5bd950 with form slovensko_nova and offset 1.
23:36:15.799 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK115AN with required changes 0.0.
23:36:15.799 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a5bd950 with form slovensko_nova and offset 2.
23:36:15.799 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KI154NI with required changes 2.6202226.
23:36:15.799 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a5bd950 with form slovensko_nova and offset 3.
23:36:15.799 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IQ540II with required changes 5.387368.
23:36:15.799 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a5bd950 with form slovensko_nova and offset 4.
23:36:15.799 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding QG407IJ with required changes 8.023025.
23:36:15.799 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a5bd950 with form ceskoslovenska_novsia and offset 0.
23:36:15.799 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding FRK1154 with required changes 1.2850207.
23:36:15.799 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a5bd950 with form ceskoslovenska_novsia and offset 1.
23:36:15.799 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKI1540 with required changes 3.9773686.
23:36:15.799 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a5bd950 with form ceskoslovenska_novsia and offset 2.
23:36:15.799 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KIQ5407 with required changes 6.777368.
23:36:15.800 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a5bd950 with form ceskoslovenska_novsia and offset 3.
23:36:15.800 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IQG4078 with required changes 9.398227.
23:36:15.800 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a5bd950 with form ceskoslovenska_novsia and offset 4.
23:36:15.800 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding QGA0781 with required changes 6.7780037.
23:36:15.800 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a5bd950 with form ceska_nova and offset 0.
23:36:15.800 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6P61154 with required changes 5.2663946.
23:36:15.800 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a5bd950 with form ceska_nova and offset 1.
23:36:15.800 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K11540 with required changes 3.9876192.
23:36:15.800 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a5bd950 with form ceska_nova and offset 2.
23:36:15.800 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6A15407 with required changes 6.9238663.
23:36:15.800 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a5bd950 with form ceska_nova and offset 3.
23:36:15.800 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1M54078 with required changes 6.9021664.
23:36:15.802 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a5bd950 with form ceska_nova and offset 4.
23:36:15.802 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1S40781 with required changes 6.6594954.
23:36:15.802 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : FR611GA with required changes 2.6575527.
23:36:15.804 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK115AN with required changes 0.0.
23:36:15.804 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : KI154NI with required changes 2.6202226.
23:36:15.804 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : IQ540II with required changes 5.387368.
23:36:15.805 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : QG407IJ with required changes 8.023025.
23:36:15.805 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : FRK1154 with required changes 1.2850207.
23:36:15.805 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 6 : RKI1540 with required changes 3.9773686.
23:36:15.805 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 7 : KIQ5407 with required changes 6.777368.
23:36:15.805 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 8 : IQG4078 with required changes 9.398227.
23:36:15.805 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 9 : QGA0781 with required changes 6.7780037.
23:36:15.806 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 10 : 6P61154 with required changes 5.2663946.
23:36:15.806 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 11 : 8K11540 with required changes 3.9876192.
23:36:15.806 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 12 : 6A15407 with required changes 6.9238663.
23:36:15.806 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 13 : 1M54078 with required changes 6.9021664.
23:36:15.806 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 14 : 1S40781 with required changes 6.6594954.
</output>
            </test>
            <test duration="483" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="5 =&gt; image=test_005.jpg extpected=TS260AK" status="passed">
                <output type="stdout">23:36:16.290 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@60f7cc1d with form slovensko_nova and offset 0.
23:36:16.292 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding TS260AK with required changes 1.1013808.
23:36:16.292 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@60f7cc1d with form ceskoslovenska_novsia and offset 0.
23:36:16.292 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding TSZ6044 with required changes 5.0186734.
23:36:16.292 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@60f7cc1d with form ceska_nova and offset 0.
23:36:16.293 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 7S26044 with required changes 5.0936074.
23:36:16.293 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : TS260AK with required changes 1.1013808.
23:36:16.293 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : TSZ6044 with required changes 5.0186734.
23:36:16.293 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 7S26044 with required changes 5.0936074.
</output>
            </test>
            <test duration="675" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="6 =&gt; image=test_006.jpg extpected=RK099AN" status="passed">
                <output type="stdout">23:36:16.969 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@71ae31b0 with form slovensko_nova and offset 0.
23:36:16.969 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK099AN with required changes 0.0.
23:36:16.969 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@71ae31b0 with form ceskoslovenska_novsia and offset 0.
23:36:16.969 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK09940 with required changes 2.6034598.
23:36:16.969 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@71ae31b0 with form ceska_nova and offset 0.
23:36:16.969 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K09940 with required changes 3.9559445.
23:36:16.969 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK099AN with required changes 0.0.
23:36:16.970 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK09940 with required changes 2.6034598.
23:36:16.970 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K09940 with required changes 3.9559445.
</output>
            </test>
            <test duration="505" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="7 =&gt; image=test_007.jpg extpected=RK828AG" status="passed">
                <output type="stdout">23:36:17.477 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@452ba1db with form slovensko_nova and offset 0.
23:36:17.477 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK828AG with required changes 0.0.
23:36:17.477 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@452ba1db with form ceskoslovenska_novsia and offset 0.
23:36:17.477 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK02840 with required changes 3.509282.
23:36:17.477 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@452ba1db with form ceska_nova and offset 0.
23:36:17.477 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 9K82840 with required changes 3.7251778.
23:36:17.477 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK828AG with required changes 0.0.
23:36:17.478 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK02840 with required changes 3.509282.
23:36:17.478 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 9K82840 with required changes 3.7251778.
</output>
            </test>
            <test duration="570" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="8 =&gt; image=test_008.jpg extpected=LM298AI" status="passed">
                <output type="stdout">23:36:18.049 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@74bdc168 with form slovensko_nova and offset 0.
23:36:18.049 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding LM298AI with required changes 0.0.
23:36:18.050 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@74bdc168 with form ceskoslovenska_novsia and offset 0.
23:36:18.050 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding LMZ9848 with required changes 3.8790967.
23:36:18.053 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@74bdc168 with form ceska_nova and offset 0.
23:36:18.054 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0M29848 with required changes 3.9920275.
23:36:18.054 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : LM298AI with required changes 0.0.
23:36:18.054 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : LMZ9848 with required changes 3.8790967.
23:36:18.054 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 0M29848 with required changes 3.9920275.
</output>
            </test>
            <test duration="438" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="9 =&gt; image=test_009.jpg extpected=1T43213" status="passed">
                <output type="stdout">23:36:18.494 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5003041b with form slovensko_nova and offset 0.
23:36:18.494 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MT432J0 with required changes 4.1800003.
23:36:18.494 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5003041b with form ceskoslovenska_novsia and offset 0.
23:36:18.494 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MTA3213 with required changes 2.6591158.
23:36:18.494 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5003041b with form ceska_nova and offset 0.
23:36:18.494 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1T43213 with required changes 0.0.
23:36:18.494 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : MT432J0 with required changes 4.1800003.
23:36:18.494 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : MTA3213 with required changes 2.6591158.
23:36:18.495 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 1T43213 with required changes 0.0.
</output>
            </test>
            <test duration="377" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="10 =&gt; image=test_010.jpg extpected=RK248AH" status="passed">
                <output type="stdout">23:36:18.872 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2555fff0 with form slovensko_nova and offset 0.
23:36:18.872 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK248AH with required changes 0.0.
23:36:18.873 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2555fff0 with form ceskoslovenska_novsia and offset 0.
23:36:18.873 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKZ4840 with required changes 3.808128.
23:36:18.873 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2555fff0 with form ceska_nova and offset 0.
23:36:18.873 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K24840 with required changes 3.8605149.
23:36:18.873 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK248AH with required changes 0.0.
23:36:18.873 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKZ4840 with required changes 3.808128.
23:36:18.873 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K24840 with required changes 3.8605149.
</output>
            </test>
            <test duration="618" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="11 =&gt; image=test_011.jpg extpected=RK346AL" status="passed">
                <output type="stdout">23:36:19.490 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@50b8ae8d with form slovensko_nova and offset 0.
23:36:19.490 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK346AL with required changes 0.0.
23:36:19.491 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@50b8ae8d with form ceskoslovenska_novsia and offset 0.
23:36:19.491 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK04640 with required changes 3.8606079.
23:36:19.491 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@50b8ae8d with form ceska_nova and offset 0.
23:36:19.491 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K34640 with required changes 4.000284.
23:36:19.492 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK346AL with required changes 0.0.
23:36:19.492 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK04640 with required changes 3.8606079.
23:36:19.492 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K34640 with required changes 4.000284.
</output>
            </test>
            <test duration="783" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="12 =&gt; image=test_012.jpg extpected=RK291AT" status="failed">
                <output type="stdout">23:36:20.276 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6d2260db with form slovensko_nova and offset 0.
23:36:20.277 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IR629MA with required changes 2.9418926.
23:36:20.277 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6d2260db with form ceskoslovenska_novsia and offset 0.
23:36:20.277 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IRK2914 with required changes 1.2485034.
23:36:20.277 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6d2260db with form ceska_nova and offset 0.
23:36:20.277 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8P62914 with required changes 5.4340286.
23:36:20.277 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IR629MA with required changes 2.9418926.
23:36:20.277 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : IRK2914 with required changes 1.2485034.
23:36:20.279 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8P62914 with required changes 5.4340286.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;IRK2914&amp;quot;
     but: was &amp;quot;RK291AT&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">IRK2914
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">RK291AT
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="379" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="13 =&gt; image=test_013.jpg extpected=RK857AI" status="passed">
                <output type="stdout">23:36:20.666 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@584f5497 with form slovensko_nova and offset 0.
23:36:20.666 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK857AI with required changes 0.0.
23:36:20.666 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@584f5497 with form ceskoslovenska_novsia and offset 0.
23:36:20.666 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG5748 with required changes 4.00726.
23:36:20.666 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@584f5497 with form ceska_nova and offset 0.
23:36:20.666 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K85748 with required changes 3.9998698.
23:36:20.666 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK857AI with required changes 0.0.
23:36:20.667 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG5748 with required changes 4.00726.
23:36:20.667 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K85748 with required changes 3.9998698.
</output>
            </test>
            <test duration="383" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="14 =&gt; image=test_014.jpg extpected=RK576AH" status="passed">
                <output type="stdout">23:36:21.050 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@907f2b7 with form slovensko_nova and offset 0.
23:36:21.050 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK576AH with required changes 0.0.
23:36:21.050 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@907f2b7 with form ceskoslovenska_novsia and offset 0.
23:36:21.050 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG7641 with required changes 3.910772.
23:36:21.050 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@907f2b7 with form ceska_nova and offset 0.
23:36:21.051 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K57641 with required changes 4.0200567.
23:36:21.051 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK576AH with required changes 0.0.
23:36:21.051 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG7641 with required changes 3.910772.
23:36:21.051 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K57641 with required changes 4.0200567.
</output>
            </test>
            <test duration="490" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="15 =&gt; image=test_015.jpg extpected=RK019AF" status="passed">
                <output type="stdout">23:36:21.542 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@69e308c6 with form slovensko_nova and offset 0.
23:36:21.542 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IR6010A with required changes 2.6182609.
23:36:21.542 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@69e308c6 with form slovensko_nova and offset 1.
23:36:21.542 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK019AF with required changes 0.0.
23:36:21.542 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@69e308c6 with form ceskoslovenska_novsia and offset 0.
23:36:21.542 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IRK0194 with required changes 1.2505882.
23:36:21.542 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@69e308c6 with form ceskoslovenska_novsia and offset 1.
23:36:21.543 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK01946 with required changes 2.590923.
23:36:21.543 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@69e308c6 with form ceska_nova and offset 0.
23:36:21.543 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 5P60194 with required changes 5.485579.
23:36:21.543 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@69e308c6 with form ceska_nova and offset 1.
23:36:21.543 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K01946 with required changes 3.90511.
23:36:21.543 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IR6010A with required changes 2.6182609.
23:36:21.543 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK019AF with required changes 0.0.
23:36:21.544 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IRK0194 with required changes 1.2505882.
23:36:21.544 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : RK01946 with required changes 2.590923.
23:36:21.544 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 5P60194 with required changes 5.485579.
23:36:21.544 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 8K01946 with required changes 3.90511.
</output>
            </test>
            <test duration="361" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="16 =&gt; image=test_016.jpg extpected=BB751BH" status="passed">
                <output type="stdout">23:36:21.908 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3605c4d3 with form slovensko_nova and offset 0.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BB751BH with required changes 1.2306825.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3605c4d3 with form slovensko_nova and offset 1.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BT516HI with required changes 2.5095441.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3605c4d3 with form ceskoslovenska_novsia and offset 0.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BBT5160 with required changes 5.048017.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3605c4d3 with form ceskoslovenska_novsia and offset 1.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BTG1607 with required changes 6.471463.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3605c4d3 with form ceska_nova and offset 0.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8B75160 with required changes 2.5621188.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3605c4d3 with form ceska_nova and offset 1.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6T51607 with required changes 6.501644.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : BB751BH with required changes 1.2306825.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : BT516HI with required changes 2.5095441.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : BBT5160 with required changes 5.048017.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : BTG1607 with required changes 6.471463.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 8B75160 with required changes 2.5621188.
23:36:21.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 6T51607 with required changes 6.501644.
</output>
            </test>
            <test duration="380" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="17 =&gt; image=test_017.jpg extpected=RK876AD" status="failed">
                <output type="stdout">23:36:22.290 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1917d90f with form slovensko_nova and offset 0.
23:36:22.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK867AD with required changes 0.0.
23:36:22.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1917d90f with form ceskoslovenska_novsia and offset 0.
23:36:22.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK06740 with required changes 3.6639698.
23:36:22.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1917d90f with form ceska_nova and offset 0.
23:36:22.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K86740 with required changes 3.8262224.
23:36:22.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK867AD with required changes 0.0.
23:36:22.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK06740 with required changes 3.6639698.
23:36:22.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K86740 with required changes 3.8262224.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;RK867AD&amp;quot;
     but: was &amp;quot;RK876AD&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">RK867AD
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">RK876AD
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="340" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="18 =&gt; image=test_018.jpg extpected=RK884AL" status="passed">
                <output type="stdout">23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6f8e0cee with form slovensko_nova and offset 0.
23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IR488AA with required changes 2.6699998.
23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6f8e0cee with form slovensko_nova and offset 1.
23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK884AL with required changes 0.0.
23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6f8e0cee with form ceskoslovenska_novsia and offset 0.
23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IRK8844 with required changes 1.4.
23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6f8e0cee with form ceskoslovenska_novsia and offset 1.
23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK08442 with required changes 4.1.
23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6f8e0cee with form ceska_nova and offset 0.
23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2P48844 with required changes 5.6.
23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6f8e0cee with form ceska_nova and offset 1.
23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K88442 with required changes 4.2400002.
23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IR488AA with required changes 2.6699998.
23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK884AL with required changes 0.0.
23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IRK8844 with required changes 1.4.
23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : RK08442 with required changes 4.1.
23:36:22.639 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 2P48844 with required changes 5.6.
23:36:22.640 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 2K88442 with required changes 4.2400002.
</output>
            </test>
            <test duration="407" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="19 =&gt; image=test_019.jpg extpected=RK865AC" status="failed">
                <output type="stdout">23:36:23.048 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6daf2337 with form slovensko_nova and offset 0.
23:36:23.048 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK786GA with required changes 2.5196793.
23:36:23.048 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6daf2337 with form slovensko_nova and offset 1.
23:36:23.048 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KY865AC with required changes 0.0.
23:36:23.048 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6daf2337 with form ceskoslovenska_novsia and offset 0.
23:36:23.048 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKY8654 with required changes 1.2320906.
23:36:23.048 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6daf2337 with form ceskoslovenska_novsia and offset 1.
23:36:23.048 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KYG6540 with required changes 3.6115773.
23:36:23.048 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6daf2337 with form ceska_nova and offset 0.
23:36:23.048 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K78654 with required changes 3.907093.
23:36:23.048 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6daf2337 with form ceska_nova and offset 1.
23:36:23.048 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6T86540 with required changes 5.169631.
23:36:23.048 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK786GA with required changes 2.5196793.
23:36:23.049 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : KY865AC with required changes 0.0.
23:36:23.049 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : RKY8654 with required changes 1.2320906.
23:36:23.049 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : KYG6540 with required changes 3.6115773.
23:36:23.049 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 2K78654 with required changes 3.907093.
23:36:23.049 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 6T86540 with required changes 5.169631.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;KY865AC&amp;quot;
     but: was &amp;quot;RK865AC&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">KY865AC
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">RK865AC
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="403" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="20 =&gt; image=test_020.jpg extpected=RK906AJ" status="passed">
                <output type="stdout">23:36:23.474 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@773e2eb5 with form slovensko_nova and offset 0.
23:36:23.474 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK906AJ with required changes 0.0.
23:36:23.474 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@773e2eb5 with form ceskoslovenska_novsia and offset 0.
23:36:23.474 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK00643 with required changes 3.6389356.
23:36:23.474 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@773e2eb5 with form ceska_nova and offset 0.
23:36:23.474 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0K90643 with required changes 3.834578.
23:36:23.474 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK906AJ with required changes 0.0.
23:36:23.474 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK00643 with required changes 3.6389356.
23:36:23.474 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 0K90643 with required changes 3.834578.
</output>
            </test>
            <test duration="434" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="21 =&gt; image=test_021.jpg extpected=RK855AP" status="passed">
                <output type="stdout">23:36:23.908 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@e344ad3 with form slovensko_nova and offset 0.
23:36:23.908 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK855AP with required changes 0.0.
23:36:23.908 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@e344ad3 with form ceskoslovenska_novsia and offset 0.
23:36:23.908 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKB5540 with required changes 3.7525105.
23:36:23.908 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@e344ad3 with form ceska_nova and offset 0.
23:36:23.908 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K85540 with required changes 3.9531856.
23:36:23.908 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK855AP with required changes 0.0.
23:36:23.908 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKB5540 with required changes 3.7525105.
23:36:23.909 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K85540 with required changes 3.9531856.
</output>
            </test>
            <test duration="379" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="22 =&gt; image=test_022.jpg extpected=RK875AE" status="passed">
                <output type="stdout">23:36:24.288 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@45d6ef73 with form slovensko_nova and offset 0.
23:36:24.288 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK875AE with required changes 1.2442422.
23:36:24.289 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@45d6ef73 with form ceskoslovenska_novsia and offset 0.
23:36:24.289 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK07545 with required changes 5.008489.
23:36:24.289 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@45d6ef73 with form ceska_nova and offset 0.
23:36:24.289 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 9K87545 with required changes 5.136349.
23:36:24.289 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK875AE with required changes 1.2442422.
23:36:24.289 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK07545 with required changes 5.008489.
23:36:24.289 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 9K87545 with required changes 5.136349.
</output>
            </test>
            <test duration="589" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="23 =&gt; image=test_023.jpg extpected=RK612AL" status="passed">
                <output type="stdout">23:36:24.886 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2f04105 with form slovensko_nova and offset 0.
23:36:24.886 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK612AL with required changes 1.1495491.
23:36:24.886 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2f04105 with form ceskoslovenska_novsia and offset 0.
23:36:24.886 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG1246 with required changes 2.6512265.
23:36:24.886 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2f04105 with form ceska_nova and offset 0.
23:36:24.886 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K61246 with required changes 5.1721034.
23:36:24.886 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK612AL with required changes 1.1495491.
23:36:24.886 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG1246 with required changes 2.6512265.
23:36:24.886 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K61246 with required changes 5.1721034.
</output>
            </test>
            <test duration="411" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="24 =&gt; image=test_024.jpg extpected=RK026AJ" status="passed">
                <output type="stdout">23:36:25.299 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5432c277 with form slovensko_nova and offset 0.
23:36:25.299 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK026AJ with required changes 1.1146505.
23:36:25.299 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5432c277 with form ceskoslovenska_novsia and offset 0.
23:36:25.299 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK02643 with required changes 3.6814122.
23:36:25.299 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5432c277 with form ceska_nova and offset 0.
23:36:25.299 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K02643 with required changes 5.0526066.
23:36:25.299 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK026AJ with required changes 1.1146505.
23:36:25.299 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK02643 with required changes 3.6814122.
23:36:25.299 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K02643 with required changes 5.0526066.
</output>
            </test>
            <test duration="420" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="25 =&gt; image=test_025.jpg extpected=RK896AO" status="failed">
                <output type="stdout">23:36:25.720 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4f453e63 with form slovensko_nova and offset 0.
23:36:25.720 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK896A0 with required changes 0.0.
23:36:25.721 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4f453e63 with form ceskoslovenska_novsia and offset 0.
23:36:25.721 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG9640 with required changes 2.4399729.
23:36:25.721 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4f453e63 with form ceska_nova and offset 0.
23:36:25.722 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K89640 with required changes 2.541915.
23:36:25.723 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK896A0 with required changes 0.0.
23:36:25.723 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG9640 with required changes 2.4399729.
23:36:25.723 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K89640 with required changes 2.541915.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;RK896A0&amp;quot;
     but: was &amp;quot;RK896AO&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">RK896A0
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">RK896AO
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="398" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="26 =&gt; image=test_026.jpg extpected=RK492AU" status="passed">
                <output type="stdout">23:36:26.129 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5c60b0a0 with form slovensko_nova and offset 0.
23:36:26.130 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK492AU with required changes 0.0.
23:36:26.130 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5c60b0a0 with form ceskoslovenska_novsia and offset 0.
23:36:26.130 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKA9240 with required changes 3.6187634.
23:36:26.130 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5c60b0a0 with form ceska_nova and offset 0.
23:36:26.130 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K49240 with required changes 3.6764011.
23:36:26.130 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK492AU with required changes 0.0.
23:36:26.130 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKA9240 with required changes 3.6187634.
23:36:26.130 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K49240 with required changes 3.6764011.
</output>
            </test>
            <test duration="406" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="27 =&gt; image=test_027.jpg extpected=RK776AI" status="passed">
                <output type="stdout">23:36:26.538 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@58496c97 with form slovensko_nova and offset 0.
23:36:26.538 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK776AI with required changes 0.0.
23:36:26.538 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@58496c97 with form ceskoslovenska_novsia and offset 0.
23:36:26.538 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKV7641 with required changes 3.912303.
23:36:26.538 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@58496c97 with form ceska_nova and offset 0.
23:36:26.538 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K77641 with required changes 4.008772.
23:36:26.538 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK776AI with required changes 0.0.
23:36:26.538 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKV7641 with required changes 3.912303.
23:36:26.538 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K77641 with required changes 4.008772.
</output>
            </test>
            <test duration="447" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="28 =&gt; image=test_028.jpg extpected=LM633BD" status="failed">
                <output type="stderr">java.lang.AssertionError: 
Expected: is null
     but: was &amp;quot;LM633BD&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">is null
     
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">&amp;quot;LM633BD&amp;quot;
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="430" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="29 =&gt; image=test_029.jpg extpected=LM010BE" status="passed">
                <output type="stdout">23:36:27.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2b10ace9 with form slovensko_nova and offset 0.
23:36:27.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding LM010BE with required changes 0.0.
23:36:27.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2b10ace9 with form ceskoslovenska_novsia and offset 0.
23:36:27.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding LM01056 with required changes 2.5909438.
23:36:27.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2b10ace9 with form ceska_nova and offset 0.
23:36:27.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 5M01056 with required changes 3.9709659.
23:36:27.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : LM010BE with required changes 0.0.
23:36:27.422 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : LM01056 with required changes 2.5909438.
23:36:27.422 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 5M01056 with required changes 3.9709659.
</output>
            </test>
            <test duration="395" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="30 =&gt; image=test_030.jpg extpected=RK819AM" status="passed">
                <output type="stdout">23:36:27.817 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7661b5a with form slovensko_nova and offset 0.
23:36:27.817 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK819AM with required changes 0.0.
23:36:27.817 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7661b5a with form ceskoslovenska_novsia and offset 0.
23:36:27.817 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG1940 with required changes 3.7576818.
23:36:27.817 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7661b5a with form ceska_nova and offset 0.
23:36:27.817 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K81940 with required changes 3.9379601.
23:36:27.817 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK819AM with required changes 0.0.
23:36:27.817 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG1940 with required changes 3.7576818.
23:36:27.817 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K81940 with required changes 3.9379601.
</output>
            </test>
            <test duration="493" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="31 =&gt; image=test_031.jpg extpected=RK619AS" status="failed">
                <output type="stdout">23:36:28.317 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4eba373c with form slovensko_nova and offset 0.
23:36:28.317 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK819AS with required changes 0.0.
23:36:28.317 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4eba373c with form ceskoslovenska_novsia and offset 0.
23:36:28.317 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG1948 with required changes 3.6565657.
23:36:28.317 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4eba373c with form ceska_nova and offset 0.
23:36:28.317 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K81948 with required changes 3.8145037.
23:36:28.317 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK819AS with required changes 0.0.
23:36:28.317 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG1948 with required changes 3.6565657.
23:36:28.317 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K81948 with required changes 3.8145037.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;RK819AS&amp;quot;
     but: was &amp;quot;RK619AS&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">RK819AS
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">RK619AS
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="524" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="32 =&gt; image=test_032.jpg extpected=RK763AS" status="failed">
                <output type="stdout">23:36:28.855 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@517a2b0 with form slovensko_nova and offset 0.
23:36:28.855 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IR678SA with required changes 3.9043312.
23:36:28.855 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@517a2b0 with form slovensko_nova and offset 1.
23:36:28.855 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK783AS with required changes 1.1546528.
23:36:28.855 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@517a2b0 with form ceskoslovenska_novsia and offset 0.
23:36:28.856 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IRK7834 with required changes 2.3903074.
23:36:28.856 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@517a2b0 with form ceskoslovenska_novsia and offset 1.
23:36:28.856 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKT8348 with required changes 4.8696933.
23:36:28.856 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@517a2b0 with form ceska_nova and offset 0.
23:36:28.856 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 7P67834 with required changes 6.5625544.
23:36:28.856 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@517a2b0 with form ceska_nova and offset 1.
23:36:28.856 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6K78348 with required changes 5.0242786.
23:36:28.856 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IR678SA with required changes 3.9043312.
23:36:28.856 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK783AS with required changes 1.1546528.
23:36:28.856 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IRK7834 with required changes 2.3903074.
23:36:28.856 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : RKT8348 with required changes 4.8696933.
23:36:28.856 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 7P67834 with required changes 6.5625544.
23:36:28.856 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 6K78348 with required changes 5.0242786.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;RK783AS&amp;quot;
     but: was &amp;quot;RK763AS&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">RK783AS
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">RK763AS
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="412" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="33 =&gt; image=test_033.jpg extpected=RK082AL" status="passed">
                <output type="stdout">23:36:29.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@524270b8 with form slovensko_nova and offset 0.
23:36:29.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ER408ZA with required changes 2.646887.
23:36:29.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@524270b8 with form slovensko_nova and offset 1.
23:36:29.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK082AL with required changes 0.0.
23:36:29.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@524270b8 with form slovensko_nova and offset 2.
23:36:29.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding K0824LJ with required changes 2.4900398.
23:36:29.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@524270b8 with form ceskoslovenska_novsia and offset 0.
23:36:29.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ERK0824 with required changes 1.2800398.
23:36:29.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@524270b8 with form ceskoslovenska_novsia and offset 1.
23:36:29.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK08245 with required changes 2.6406186.
23:36:29.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@524270b8 with form ceskoslovenska_novsia and offset 2.
23:36:29.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding K0G2451 with required changes 3.825121.
23:36:29.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@524270b8 with form ceska_nova and offset 0.
23:36:29.274 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 5P40824 with required changes 5.31585.
23:36:29.274 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@524270b8 with form ceska_nova and offset 1.
23:36:29.274 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K08245 with required changes 3.9354837.
23:36:29.274 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@524270b8 with form ceska_nova and offset 2.
23:36:29.274 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4U82451 with required changes 5.1649933.
23:36:29.274 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : ER408ZA with required changes 2.646887.
23:36:29.274 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK082AL with required changes 0.0.
23:36:29.274 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : K0824LJ with required changes 2.4900398.
23:36:29.274 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : ERK0824 with required changes 1.2800398.
23:36:29.274 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : RK08245 with required changes 2.6406186.
23:36:29.274 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : K0G2451 with required changes 3.825121.
23:36:29.274 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 6 : 5P40824 with required changes 5.31585.
23:36:29.274 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 7 : 8K08245 with required changes 3.9354837.
23:36:29.274 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 8 : 4U82451 with required changes 5.1649933.
</output>
            </test>
            <test duration="410" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="34 =&gt; image=test_034.jpg extpected=SG47471" status="failed">
                <output type="stdout">23:36:29.686 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3291b443 with form slovensko_nova and offset 0.
23:36:29.686 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding SG471ZJ with required changes 3.9189239.
23:36:29.686 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3291b443 with form ceskoslovenska_novsia and offset 0.
23:36:29.686 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding SGM7171 with required changes 5.1941915.
23:36:29.686 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3291b443 with form ceska_nova and offset 0.
23:36:29.686 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 5C47171 with required changes 5.07472.
23:36:29.686 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : SG471ZJ with required changes 3.9189239.
23:36:29.686 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : SGM7171 with required changes 5.1941915.
23:36:29.686 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 5C47171 with required changes 5.07472.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;S64Z1Z1&amp;quot;
     but: was &amp;quot;SG47471&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">S64Z1Z1
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">SG47471
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="590" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="35 =&gt; image=test_035.jpg extpected=BA738DE" status="passed">
                <output type="stdout">23:36:30.281 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d0d91a1 with form slovensko_nova and offset 0.
23:36:30.282 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BA738DE with required changes 0.0.
23:36:30.282 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d0d91a1 with form slovensko_nova and offset 1.
23:36:30.282 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AT380EJ with required changes 3.878098.
23:36:30.282 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d0d91a1 with form ceskoslovenska_novsia and offset 0.
23:36:30.282 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BAT3802 with required changes 3.898098.
23:36:30.282 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d0d91a1 with form ceskoslovenska_novsia and offset 1.
23:36:30.282 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ATJ8021 with required changes 5.202892.
23:36:30.282 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d0d91a1 with form ceska_nova and offset 0.
23:36:30.283 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8A73802 with required changes 3.7415986.
23:36:30.283 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d0d91a1 with form ceska_nova and offset 1.
23:36:30.283 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4T38021 with required changes 5.1973486.
23:36:30.283 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : BA738DE with required changes 0.0.
23:36:30.283 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : AT380EJ with required changes 3.878098.
23:36:30.283 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : BAT3802 with required changes 3.898098.
23:36:30.283 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : ATJ8021 with required changes 5.202892.
23:36:30.283 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 8A73802 with required changes 3.7415986.
23:36:30.283 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 4T38021 with required changes 5.1973486.
</output>
            </test>
            <test duration="400" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="36 =&gt; image=test_036.jpg extpected=RK708AI" status="failed">
                <output type="stdout">23:36:30.684 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5e922647 with form slovensko_nova and offset 0.
23:36:30.684 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding HA708AI with required changes 1.39.
23:36:30.684 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5e922647 with form ceskoslovenska_novsia and offset 0.
23:36:30.684 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding HAV0848 with required changes 5.5599995.
23:36:30.684 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5e922647 with form ceska_nova and offset 0.
23:36:30.684 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8A70848 with required changes 5.5999994.
23:36:30.684 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : HA708AI with required changes 1.39.
23:36:30.684 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : HAV0848 with required changes 5.5599995.
23:36:30.684 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8A70848 with required changes 5.5999994.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;HA708AI&amp;quot;
     but: was &amp;quot;RK708AI&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">HA708AI
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">RK708AI
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="563" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="37 =&gt; image=test_037.jpg extpected=RK260AR" status="passed">
                <output type="stdout">23:36:31.252 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6c0905f6 with form slovensko_nova and offset 0.
23:36:31.252 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK260AR with required changes 1.2176998.
23:36:31.252 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6c0905f6 with form ceskoslovenska_novsia and offset 0.
23:36:31.252 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKZ6048 with required changes 5.141021.
23:36:31.252 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6c0905f6 with form ceska_nova and offset 0.
23:36:31.252 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K26048 with required changes 5.206339.
23:36:31.252 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK260AR with required changes 1.2176998.
23:36:31.252 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKZ6048 with required changes 5.141021.
23:36:31.252 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K26048 with required changes 5.206339.
</output>
            </test>
            <test duration="438" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="38 =&gt; image=test_038.jpg extpected=RK340A0" status="passed">
                <output type="stdout">23:36:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@97a145b with form slovensko_nova and offset 0.
23:36:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK340A0 with required changes 0.0.
23:36:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@97a145b with form ceskoslovenska_novsia and offset 0.
23:36:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKS4040 with required changes 2.4608212.
23:36:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@97a145b with form ceska_nova and offset 0.
23:36:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K34040 with required changes 2.5560348.
23:36:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK340A0 with required changes 0.0.
23:36:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKS4040 with required changes 2.4608212.
23:36:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K34040 with required changes 2.5560348.
</output>
            </test>
            <test duration="433" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="39 =&gt; image=test_039.jpg extpected=RK892AE" status="failed">
                <output type="stdout">23:36:32.125 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6e3eb0cd with form slovensko_nova and offset 0.
23:36:32.125 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK892AF with required changes 0.0.
23:36:32.126 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6e3eb0cd with form slovensko_nova and offset 1.
23:36:32.126 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KI924FJ with required changes 3.94.
23:36:32.126 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6e3eb0cd with form ceskoslovenska_novsia and offset 0.
23:36:32.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKI9246 with required changes 4.03.
23:36:32.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6e3eb0cd with form ceskoslovenska_novsia and offset 1.
23:36:32.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KI02461 with required changes 5.3700004.
23:36:32.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6e3eb0cd with form ceska_nova and offset 0.
23:36:32.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K89246 with required changes 4.1.
23:36:32.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6e3eb0cd with form ceska_nova and offset 1.
23:36:32.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6S92461 with required changes 5.57.
23:36:32.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK892AF with required changes 0.0.
23:36:32.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : KI924FJ with required changes 3.94.
23:36:32.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : RKI9246 with required changes 4.03.
23:36:32.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : KI02461 with required changes 5.3700004.
23:36:32.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 8K89246 with required changes 4.1.
23:36:32.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 6S92461 with required changes 5.57.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;RK892AF&amp;quot;
     but: was &amp;quot;RK892AE&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">RK892AF
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">RK892AE
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="627" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="40 =&gt; image=test_040.jpg extpected=RK101AO" status="failed">
                <output type="stdout">23:36:32.759 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@74f827ad with form slovensko_nova and offset 0.
23:36:32.759 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IX701I0 with required changes 1.3770661.
23:36:32.759 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@74f827ad with form ceskoslovenska_novsia and offset 0.
23:36:32.759 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IXT0140 with required changes 1.3743382.
23:36:32.759 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@74f827ad with form ceska_nova and offset 0.
23:36:32.759 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4K70140 with required changes 5.395313.
23:36:32.759 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IX701I0 with required changes 1.3770661.
23:36:32.759 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : IXT0140 with required changes 1.3743382.
23:36:32.760 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 4K70140 with required changes 5.395313.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;IXT0140&amp;quot;
     but: was &amp;quot;RK101AO&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">IXT0140
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">RK101AO
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="504" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="41 =&gt; image=test_041.jpg extpected=LM025BD" status="passed">
                <output type="stdout">23:36:33.272 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@68d6d775 with form slovensko_nova and offset 0.
23:36:33.272 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding FL102GB with required changes 2.5782614.
23:36:33.272 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@68d6d775 with form slovensko_nova and offset 1.
23:36:33.272 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding LM025BD with required changes 0.0.
23:36:33.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@68d6d775 with form ceskoslovenska_novsia and offset 0.
23:36:33.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding FLM0258 with required changes 1.234747.
23:36:33.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@68d6d775 with form ceskoslovenska_novsia and offset 1.
23:36:33.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding LM02580 with required changes 2.396008.
23:36:33.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@68d6d775 with form ceska_nova and offset 0.
23:36:33.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 5L10258 with required changes 3.9878082.
23:36:33.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@68d6d775 with form ceska_nova and offset 1.
23:36:33.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0M02580 with required changes 3.774897.
23:36:33.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : FL102GB with required changes 2.5782614.
23:36:33.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : LM025BD with required changes 0.0.
23:36:33.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : FLM0258 with required changes 1.234747.
23:36:33.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : LM02580 with required changes 2.396008.
23:36:33.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 5L10258 with required changes 3.9878082.
23:36:33.273 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 0M02580 with required changes 3.774897.
</output>
            </test>
            <test duration="367" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="42 =&gt; image=test_042.jpg extpected=BA28IM" status="failed">
                <output type="stdout">23:36:33.640 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@999b951 with form slovensko_nova and offset 0.
23:36:33.640 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IB428SI with required changes 2.5942686.
23:36:33.640 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@999b951 with form slovensko_nova and offset 1.
23:36:33.640 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BA288IM with required changes 0.0.
23:36:33.640 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@999b951 with form ceskoslovenska_novsia and offset 0.
23:36:33.640 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IBA2888 with required changes 1.45.
23:36:33.640 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@999b951 with form ceskoslovenska_novsia and offset 1.
23:36:33.640 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BAZ8881 with required changes 4.15876.
23:36:33.640 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@999b951 with form ceska_nova and offset 0.
23:36:33.640 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8B42888 with required changes 4.1724415.
23:36:33.640 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@999b951 with form ceska_nova and offset 1.
23:36:33.640 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8A28881 with required changes 4.0761037.
23:36:33.640 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IB428SI with required changes 2.5942686.
23:36:33.640 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : BA288IM with required changes 0.0.
23:36:33.640 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IBA2888 with required changes 1.45.
23:36:33.641 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : BAZ8881 with required changes 4.15876.
23:36:33.641 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 8B42888 with required changes 4.1724415.
23:36:33.641 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 8A28881 with required changes 4.0761037.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;BA288IM&amp;quot;
     but: was &amp;quot;BA28IM&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">BA288IM
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">BA28IM
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="405" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="43 =&gt; image=test_043.jpg extpected=DK41AH" status="failed">
                <output type="stdout">23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2fb25f4c with form slovensko_nova and offset 0.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ID664QA with required changes 4.08.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2fb25f4c with form slovensko_nova and offset 1.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding DK641AH with required changes 1.16.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2fb25f4c with form ceskoslovenska_novsia and offset 0.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IDK6414 with required changes 2.4899998.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2fb25f4c with form ceskoslovenska_novsia and offset 1.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding DKG4148 with required changes 2.6699998.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2fb25f4c with form ceska_nova and offset 0.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8U66414 with required changes 6.5699997.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2fb25f4c with form ceska_nova and offset 1.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0K64148 with required changes 4.91.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : ID664QA with required changes 4.08.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : DK641AH with required changes 1.16.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IDK6414 with required changes 2.4899998.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : DKG4148 with required changes 2.6699998.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 8U66414 with required changes 6.5699997.
23:36:34.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 0K64148 with required changes 4.91.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;DK641AH&amp;quot;
     but: was &amp;quot;DK41AH&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">DK641AH
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">DK41AH
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="386" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="44 =&gt; image=test_044.jpg extpected=RK878AC" status="passed">
                <output type="stdout">23:36:34.459 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@61ae0d43 with form slovensko_nova and offset 0.
23:36:34.459 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK878AC with required changes 0.0.
23:36:34.460 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@61ae0d43 with form ceskoslovenska_novsia and offset 0.
23:36:34.460 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK07845 with required changes 3.833846.
23:36:34.460 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@61ae0d43 with form ceska_nova and offset 0.
23:36:34.460 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6K87845 with required changes 3.96.
23:36:34.460 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK878AC with required changes 0.0.
23:36:34.460 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK07845 with required changes 3.833846.
23:36:34.460 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 6K87845 with required changes 3.96.
</output>
            </test>
            <test duration="1121" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="45 =&gt; image=test_045.jpg extpected=RK878AC" status="passed">
                <output type="stdout">23:36:35.584 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1c93b51e with form slovensko_nova and offset 0.
23:36:35.584 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK878AC with required changes 0.0.
23:36:35.584 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1c93b51e with form ceskoslovenska_novsia and offset 0.
23:36:35.584 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK07840 with required changes 3.881962.
23:36:35.584 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1c93b51e with form ceska_nova and offset 0.
23:36:35.584 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K87840 with required changes 3.9218147.
23:36:35.584 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK878AC with required changes 0.0.
23:36:35.584 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK07840 with required changes 3.881962.
23:36:35.584 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K87840 with required changes 3.9218147.
</output>
            </test>
            <test duration="423" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="46 =&gt; image=test_046.jpg extpected=RK143AT" status="passed">
                <output type="stdout">23:36:36.006 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6418e39e with form slovensko_nova and offset 0.
23:36:36.006 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK143AT with required changes 1.3186398.
23:36:36.006 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6418e39e with form ceskoslovenska_novsia and offset 0.
23:36:36.006 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKI4347 with required changes 2.5017498.
23:36:36.006 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6418e39e with form ceska_nova and offset 0.
23:36:36.006 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 9K14347 with required changes 5.1479516.
23:36:36.006 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK143AT with required changes 1.3186398.
23:36:36.006 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKI4347 with required changes 2.5017498.
23:36:36.007 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 9K14347 with required changes 5.1479516.
</output>
            </test>
            <test duration="361" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="47 =&gt; image=test_047.jpg extpected=RK161AG" status="failed">
                <output type="stdout">23:36:36.378 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7a9ceddf with form slovensko_nova and offset 0.
23:36:36.378 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK181AG with required changes 0.0.
23:36:36.379 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7a9ceddf with form ceskoslovenska_novsia and offset 0.
23:36:36.379 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKJ8140 with required changes 3.9642174.
23:36:36.379 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7a9ceddf with form ceska_nova and offset 0.
23:36:36.379 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K18140 with required changes 3.8851857.
23:36:36.379 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK181AG with required changes 0.0.
23:36:36.379 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKJ8140 with required changes 3.9642174.
23:36:36.379 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K18140 with required changes 3.8851857.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;RK181AG&amp;quot;
     but: was &amp;quot;RK161AG&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">RK181AG
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">RK161AG
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="346" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="48 =&gt; image=test_048.jpg extpected=RK161AG" status="failed">
                <output type="stdout">23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@51da32e5 with form slovensko_nova and offset 0.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK416MA with required changes 2.7120337.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@51da32e5 with form slovensko_nova and offset 1.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KI161AG with required changes 0.0.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@51da32e5 with form ceskoslovenska_novsia and offset 0.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKI1614 with required changes 1.306024.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@51da32e5 with form ceskoslovenska_novsia and offset 1.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KII6148 with required changes 3.9397411.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@51da32e5 with form ceska_nova and offset 0.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K41614 with required changes 3.9838712.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@51da32e5 with form ceska_nova and offset 1.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4A16148 with required changes 5.2841315.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK416MA with required changes 2.7120337.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : KI161AG with required changes 0.0.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : RKI1614 with required changes 1.306024.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : KII6148 with required changes 3.9397411.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 8K41614 with required changes 3.9838712.
23:36:36.730 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 4A16148 with required changes 5.2841315.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;KI161AG&amp;quot;
     but: was &amp;quot;RK161AG&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">KI161AG
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">RK161AG
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="392" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="49 =&gt; image=test_049.jpg extpected=KMBORAK" status="failed">
                <output type="stdout">23:36:37.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3d615b2e with form slovensko_nova and offset 0.
23:36:37.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KM606AK with required changes 2.5633714.
23:36:37.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3d615b2e with form slovensko_nova and offset 1.
23:36:37.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MB064KJ with required changes 3.9014845.
23:36:37.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3d615b2e with form ceskoslovenska_novsia and offset 0.
23:36:37.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KMB0646 with required changes 4.122201.
23:36:37.127 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3d615b2e with form ceskoslovenska_novsia and offset 1.
23:36:37.128 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MB06463 with required changes 4.122201.
23:36:37.128 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3d615b2e with form ceska_nova and offset 0.
23:36:37.128 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4M60646 with required changes 6.761915.
23:36:37.128 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3d615b2e with form ceska_nova and offset 1.
23:36:37.128 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0B06463 with required changes 5.4920683.
23:36:37.128 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : KM606AK with required changes 2.5633714.
23:36:37.128 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : MB064KJ with required changes 3.9014845.
23:36:37.128 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : KMB0646 with required changes 4.122201.
23:36:37.128 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : MB06463 with required changes 4.122201.
23:36:37.128 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 4M60646 with required changes 6.761915.
23:36:37.128 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 0B06463 with required changes 5.4920683.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;KMB0RAK3&amp;quot;
     but: was &amp;quot;KMBORAK&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">KMB0RAK3
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">KMBORAK
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="521" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="50 =&gt; image=test_050.jpg extpected=BB135BO" status="failed">
                <output type="stderr">java.lang.AssertionError: 
Expected: is null
     but: was &amp;quot;BB135BO&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">is null
     
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">&amp;quot;BB135BO&amp;quot;
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="1005" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="51 =&gt; image=test_051.jpg extpected=RK605AB" status="failed">
                <output type="stdout">23:36:38.666 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@267f9765 with form slovensko_nova and offset 0.
23:36:38.666 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK605AI with required changes 1.1486803.
23:36:38.666 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@267f9765 with form ceskoslovenska_novsia and offset 0.
23:36:38.666 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG0548 with required changes 4.979673.
23:36:38.667 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@267f9765 with form ceska_nova and offset 0.
23:36:38.667 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K60548 with required changes 5.203043.
23:36:38.667 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK605AI with required changes 1.1486803.
23:36:38.667 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG0548 with required changes 4.979673.
23:36:38.667 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K60548 with required changes 5.203043.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;RK605AI&amp;quot;
     but: was &amp;quot;RK605AB&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">RK605AI
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">RK605AB
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="361" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="52 =&gt; image=test_052.jpg extpected=BY649AG" status="failed">
                <output type="stdout">23:36:39.041 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5dbbb292 with form slovensko_nova and offset 0.
23:36:39.041 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0Y849AL with required changes 2.73.
23:36:39.041 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5dbbb292 with form ceskoslovenska_novsia and offset 0.
23:36:39.041 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0YG4944 with required changes 3.9599998.
23:36:39.041 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5dbbb292 with form ceska_nova and offset 0.
23:36:39.041 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8Z84944 with required changes 2.75.
23:36:39.041 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : 0Y849AL with required changes 2.73.
23:36:39.041 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : 0YG4944 with required changes 3.9599998.
23:36:39.041 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8Z84944 with required changes 2.75.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;8Y849A4&amp;quot;
     but: was &amp;quot;BY649AG&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">8Y849A4
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">BY649AG
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="417" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="53 =&gt; image=test_053.jpg extpected=RK715AA" status="failed">
                <output type="stdout">23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6e24ce51 with form slovensko_nova and offset 0.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IR471SA with required changes 2.798674.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6e24ce51 with form slovensko_nova and offset 1.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK718AA with required changes 0.0.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6e24ce51 with form ceskoslovenska_novsia and offset 0.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IRK7184 with required changes 1.3821778.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6e24ce51 with form ceskoslovenska_novsia and offset 1.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKZ1844 with required changes 3.9778666.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6e24ce51 with form ceska_nova and offset 0.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 5S47184 with required changes 5.7733665.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6e24ce51 with form ceska_nova and offset 1.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K71844 with required changes 4.1384673.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IR471SA with required changes 2.798674.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK718AA with required changes 0.0.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IRK7184 with required changes 1.3821778.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : RKZ1844 with required changes 3.9778666.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 5S47184 with required changes 5.7733665.
23:36:39.462 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 2K71844 with required changes 4.1384673.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;RK718AA&amp;quot;
     but: was &amp;quot;RK715AA&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">RK718AA
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">RK715AA
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="331" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="54 =&gt; image=test_054.jpg extpected=RK22AH" status="failed">
                <output type="stdout">23:36:39.796 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3b435211 with form slovensko_nova and offset 0.
23:36:39.796 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding HK282AL with required changes 0.0.
23:36:39.796 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3b435211 with form ceskoslovenska_novsia and offset 0.
23:36:39.796 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding HKZ8246 with required changes 4.06.
23:36:39.796 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3b435211 with form ceska_nova and offset 0.
23:36:39.796 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K28246 with required changes 4.16.
23:36:39.796 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : HK282AL with required changes 0.0.
23:36:39.796 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : HKZ8246 with required changes 4.06.
23:36:39.796 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K28246 with required changes 4.16.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;HK282AL&amp;quot;
     but: was &amp;quot;RK22AH&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">HK282AL
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">RK22AH
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="351" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="55 =&gt; image=test_055.jpg extpected=NO450AM" status="failed">
                <output type="stdout">23:36:40.150 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6806468e with form slovensko_nova and offset 0.
23:36:40.150 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding N0450AM with required changes 0.0.
23:36:40.150 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6806468e with form ceskoslovenska_novsia and offset 0.
23:36:40.150 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding N0A5046 with required changes 3.9857779.
23:36:40.150 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6806468e with form ceska_nova and offset 0.
23:36:40.150 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0U45046 with required changes 5.2321773.
23:36:40.150 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : N0450AM with required changes 0.0.
23:36:40.150 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : N0A5046 with required changes 3.9857779.
23:36:40.150 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 0U45046 with required changes 5.2321773.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;N0450AM&amp;quot;
     but: was &amp;quot;NO450AM&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">N0450AM
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">NO450AM
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="544" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="56 =&gt; image=test_056.jpg extpected=RK300AG" status="failed">
                <output type="stderr">java.lang.AssertionError: 
Expected: is null
     but: was &amp;quot;RK300AG&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">is null
     
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">&amp;quot;RK300AG&amp;quot;
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="748" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="57 =&gt; image=test_057.jpg extpected=RK300AS" status="passed">
                <output type="stdout">23:36:41.452 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@546ed2a0 with form slovensko_nova and offset 0.
23:36:41.452 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK300AS with required changes 1.0868248.
23:36:41.452 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@546ed2a0 with form ceskoslovenska_novsia and offset 0.
23:36:41.452 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKB0043 with required changes 4.9424267.
23:36:41.452 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@546ed2a0 with form ceska_nova and offset 0.
23:36:41.452 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 7K30043 with required changes 5.0253835.
23:36:41.452 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK300AS with required changes 1.0868248.
23:36:41.453 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKB0043 with required changes 4.9424267.
23:36:41.453 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 7K30043 with required changes 5.0253835.
</output>
            </test>
            <test duration="502" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="58 =&gt; image=test_058.jpg extpected=RK485AF" status="passed">
                <output type="stdout">23:36:41.956 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@78c74647 with form slovensko_nova and offset 0.
23:36:41.956 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK485AF with required changes 1.2550395.
23:36:41.956 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@78c74647 with form ceskoslovenska_novsia and offset 0.
23:36:41.956 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKA8546 with required changes 5.2726035.
23:36:41.956 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@78c74647 with form ceska_nova and offset 0.
23:36:41.956 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0K48546 with required changes 5.333389.
23:36:41.956 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK485AF with required changes 1.2550395.
23:36:41.956 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKA8546 with required changes 5.2726035.
23:36:41.956 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 0K48546 with required changes 5.333389.
</output>
            </test>
            <test duration="334" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="59 =&gt; image=test_059.jpg extpected=BA302OZ" status="failed">
                <output type="stdout">23:36:42.290 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2d237460 with form slovensko_nova and offset 0.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IB430Z0 with required changes 2.5838442.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2d237460 with form slovensko_nova and offset 1.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BA3020Z with required changes 0.0.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2d237460 with form ceskoslovenska_novsia and offset 0.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IBA3020 with required changes 0.0.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2d237460 with form ceskoslovenska_novsia and offset 1.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BAQ0202 with required changes 2.5658045.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2d237460 with form ceska_nova and offset 0.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 5B43020 with required changes 2.7150922.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2d237460 with form ceska_nova and offset 1.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6A30202 with required changes 2.6208444.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IB430Z0 with required changes 2.5838442.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : BA3020Z with required changes 0.0.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IBA3020 with required changes 0.0.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : BAQ0202 with required changes 2.5658045.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 5B43020 with required changes 2.7150922.
23:36:42.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 6A30202 with required changes 2.6208444.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;IBA3020&amp;quot;
     but: was &amp;quot;BA302OZ&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">IBA3020
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">BA302OZ
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="384" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="60 =&gt; image=test_060.jpg extpected=BA302OZ" status="failed">
                <output type="stdout">23:36:42.681 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@35fa450f with form slovensko_nova and offset 0.
23:36:42.681 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IA3020Z with required changes 0.0.
23:36:42.681 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@35fa450f with form slovensko_nova and offset 1.
23:36:42.681 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AV020ZJ with required changes 2.638817.
23:36:42.681 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@35fa450f with form ceskoslovenska_novsia and offset 0.
23:36:42.681 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IAV0202 with required changes 2.723817.
23:36:42.681 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@35fa450f with form ceskoslovenska_novsia and offset 1.
23:36:42.681 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AV02021 with required changes 2.723817.
23:36:42.681 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@35fa450f with form ceska_nova and offset 0.
23:36:42.681 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4A30202 with required changes 2.7200992.
23:36:42.681 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@35fa450f with form ceska_nova and offset 1.
23:36:42.682 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4J02021 with required changes 4.0563765.
23:36:42.682 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IA3020Z with required changes 0.0.
23:36:42.682 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : AV020ZJ with required changes 2.638817.
23:36:42.682 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IAV0202 with required changes 2.723817.
23:36:42.682 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : AV02021 with required changes 2.723817.
23:36:42.682 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 4A30202 with required changes 2.7200992.
23:36:42.682 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 4J02021 with required changes 4.0563765.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;IA3020Z&amp;quot;
     but: was &amp;quot;BA302OZ&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">IA3020Z
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">BA302OZ
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="346" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="61 =&gt; image=test_061.jpg extpected=MT456BJ" status="failed">
                <output type="stdout">23:36:43.032 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@27ffd9f8 with form slovensko_nova and offset 0.
23:36:43.032 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MT458IJ with required changes 1.28.
23:36:43.032 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@27ffd9f8 with form ceskoslovenska_novsia and offset 0.
23:36:43.032 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MTX5883 with required changes 2.6533918.
23:36:43.033 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@27ffd9f8 with form ceska_nova and offset 0.
23:36:43.033 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8T45883 with required changes 2.7062254.
23:36:43.033 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : MT458IJ with required changes 1.28.
23:36:43.033 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : MTX5883 with required changes 2.6533918.
23:36:43.033 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8T45883 with required changes 2.7062254.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;MT458IJ&amp;quot;
     but: was &amp;quot;MT456BJ&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">MT458IJ
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">MT456BJ
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="384" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="62 =&gt; image=test_062.jpg extpected=1B80338" status="failed">
                <output type="stdout">23:36:43.420 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7b91d9f with form slovensko_nova and offset 0.
23:36:43.420 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding QD883SS with required changes 5.21.
23:36:43.420 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7b91d9f with form ceskoslovenska_novsia and offset 0.
23:36:43.420 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding QD08338 with required changes 3.97.
23:36:43.420 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7b91d9f with form ceska_nova and offset 0.
23:36:43.420 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1B88338 with required changes 1.27.
23:36:43.420 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : QD883SS with required changes 5.21.
23:36:43.420 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : QD08338 with required changes 3.97.
23:36:43.420 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 1B88338 with required changes 1.27.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;1B88338&amp;quot;
     but: was &amp;quot;1B80338&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">1B88338
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">1B80338
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="411" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="63 =&gt; image=test_063.jpg extpected=1B25790" status="failed">
                <output type="stdout">23:36:43.835 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@216f01 with form slovensko_nova and offset 0.
23:36:43.835 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MD2870Q with required changes 5.0943623.
23:36:43.835 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@216f01 with form ceskoslovenska_novsia and offset 0.
23:36:43.835 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MDZ8790 with required changes 6.2511477.
23:36:43.835 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@216f01 with form ceska_nova and offset 0.
23:36:43.835 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1B28790 with required changes 3.6675184.
23:36:43.835 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : MD2870Q with required changes 5.0943623.
23:36:43.835 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : MDZ8790 with required changes 6.2511477.
23:36:43.835 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 1B28790 with required changes 3.6675184.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;1828Z9Q&amp;quot;
     but: was &amp;quot;1B25790&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">1828Z9Q
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">1B25790
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="394" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="64 =&gt; image=test_064.jpg extpected=BZM2227" status="failed">
                <output type="stdout">23:36:44.232 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a457c2b with form slovensko_nova and offset 0.
23:36:44.232 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BZ122ZZ with required changes 3.8243926.
23:36:44.232 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a457c2b with form ceskoslovenska_novsia and offset 0.
23:36:44.232 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BZM2227 with required changes 2.506172.
23:36:44.232 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a457c2b with form ceska_nova and offset 0.
23:36:44.232 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8Z12227 with required changes 5.143947.
23:36:44.232 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : BZ122ZZ with required changes 3.8243926.
23:36:44.232 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : BZM2227 with required changes 2.506172.
23:36:44.232 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8Z12227 with required changes 5.143947.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;BZM2Z2Z&amp;quot;
     but: was &amp;quot;BZM2227&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">BZM2Z2Z
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">BZM2227
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="442" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="65 =&gt; image=test_065.jpg extpected=4B04979" status="failed">
                <output type="stdout">23:36:44.677 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4c063cb9 with form slovensko_nova and offset 0.
23:36:44.677 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AI848ZQ with required changes 5.2239103.
23:36:44.677 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4c063cb9 with form ceskoslovenska_novsia and offset 0.
23:36:44.677 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AIQ4879 with required changes 3.8989334.
23:36:44.677 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4c063cb9 with form ceska_nova and offset 0.
23:36:44.677 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4B84879 with required changes 3.9258258.
23:36:44.677 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : AI848ZQ with required changes 5.2239103.
23:36:44.677 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : AIQ4879 with required changes 3.8989334.
23:36:44.677 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 4B84879 with required changes 3.9258258.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;48Q48Z9&amp;quot;
     but: was &amp;quot;4B04979&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">48Q48Z9
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">4B04979
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="358" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="66 =&gt; image=test_066.jpg extpected=BSE5579" status="failed">
                <output type="stdout">23:36:45.040 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@11e834ad with form slovensko_nova and offset 0.
23:36:45.040 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BS655ZI with required changes 5.1166162.
23:36:45.040 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@11e834ad with form ceskoslovenska_novsia and offset 0.
23:36:45.040 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BSE5578 with required changes 1.2578045.
23:36:45.040 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@11e834ad with form ceska_nova and offset 0.
23:36:45.040 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8S65578 with required changes 1.2830142.
23:36:45.040 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : BS655ZI with required changes 5.1166162.
23:36:45.040 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : BSE5578 with required changes 1.2578045.
23:36:45.040 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8S65578 with required changes 1.2830142.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;BSE5578&amp;quot;
     but: was &amp;quot;BSE5579&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">BSE5578
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">BSE5579
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="481" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="67 =&gt; image=test_067.jpg extpected=1B70440" status="passed">
                <output type="stdout">23:36:45.524 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@11abd6c with form slovensko_nova and offset 0.
23:36:45.525 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MD704A0 with required changes 2.715294.
23:36:45.525 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@11abd6c with form ceskoslovenska_novsia and offset 0.
23:36:45.525 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MDZ0440 with required changes 2.6240177.
23:36:45.525 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@11abd6c with form ceska_nova and offset 0.
23:36:45.525 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1B70440 with required changes 1.2543757.
23:36:45.525 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : MD704A0 with required changes 2.715294.
23:36:45.525 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : MDZ0440 with required changes 2.6240177.
23:36:45.525 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 1B70440 with required changes 1.2543757.
</output>
            </test>
            <test duration="459" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="68 =&gt; image=test_068.jpg extpected=1B19839" status="passed">
                <output type="stdout">23:36:45.983 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@793cef95 with form slovensko_nova and offset 0.
23:36:45.983 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding QB198S0 with required changes 3.9630742.
23:36:45.983 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@793cef95 with form ceskoslovenska_novsia and offset 0.
23:36:45.984 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding QBQ9839 with required changes 2.8000002.
23:36:45.984 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@793cef95 with form ceska_nova and offset 0.
23:36:45.984 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1B19839 with required changes 0.0.
23:36:45.984 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : QB198S0 with required changes 3.9630742.
23:36:45.984 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : QBQ9839 with required changes 2.8000002.
23:36:45.984 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 1B19839 with required changes 0.0.
</output>
            </test>
            <test duration="347" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="69 =&gt; image=test_069.jpg extpected=4B40262" status="failed">
                <output type="stdout">23:36:46.332 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1d2def55 with form slovensko_nova and offset 0.
23:36:46.332 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AB482IZ with required changes 5.268625.
23:36:46.332 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1d2def55 with form ceskoslovenska_novsia and offset 0.
23:36:46.332 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ABA8282 with required changes 3.9218872.
23:36:46.332 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1d2def55 with form ceska_nova and offset 0.
23:36:46.332 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4B48282 with required changes 1.3322921.
23:36:46.332 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : AB482IZ with required changes 5.268625.
23:36:46.332 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : ABA8282 with required changes 3.9218872.
23:36:46.332 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 4B48282 with required changes 1.3322921.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;4B48282&amp;quot;
     but: was &amp;quot;4B40262&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">4B48282
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">4B40262
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="371" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="70 =&gt; image=test_070.jpg extpected=2T40211" status="failed">
                <output type="stdout">23:36:46.705 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@49d42faf with form slovensko_nova and offset 0.
23:36:46.705 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ZT482QM with required changes 5.4584627.
23:36:46.705 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@49d42faf with form ceskoslovenska_novsia and offset 0.
23:36:46.705 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ZTA8211 with required changes 4.0184627.
23:36:46.705 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@49d42faf with form ceska_nova and offset 0.
23:36:46.705 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2T48211 with required changes 1.3552326.
23:36:46.705 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : ZT482QM with required changes 5.4584627.
23:36:46.705 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : ZTA8211 with required changes 4.0184627.
23:36:46.705 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2T48211 with required changes 1.3552326.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;2T48211&amp;quot;
     but: was &amp;quot;2T40211&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">2T48211
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">2T40211
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="338" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="71 =&gt; image=test_071.jpg extpected=1Z75233" status="passed">
                <output type="stdout">23:36:47.049 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1f26b992 with form slovensko_nova and offset 0.
23:36:47.049 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding NZ75200 with required changes 5.371964.
23:36:47.049 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1f26b992 with form ceskoslovenska_novsia and offset 0.
23:36:47.049 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding NZZ5233 with required changes 1.4.
23:36:47.049 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1f26b992 with form ceska_nova and offset 0.
23:36:47.049 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1Z75233 with required changes 1.36.
23:36:47.049 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : NZ75200 with required changes 5.371964.
23:36:47.049 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : NZZ5233 with required changes 1.4.
23:36:47.049 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 1Z75233 with required changes 1.36.
</output>
            </test>
            <test duration="402" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="72 =&gt; image=test_072.jpg extpected=4B39376" status="failed">
                <output type="stdout">23:36:47.447 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@756c67cd with form slovensko_nova and offset 0.
23:36:47.447 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AB393ZG with required changes 3.828688.
23:36:47.447 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@756c67cd with form slovensko_nova and offset 1.
23:36:47.447 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding B0937GI with required changes 2.60609.
23:36:47.447 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@756c67cd with form slovensko_nova and offset 2.
23:36:47.447 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 00378II with required changes 2.5430143.
23:36:47.447 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@756c67cd with form slovensko_nova and offset 3.
23:36:47.447 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0Q781II with required changes 3.9800787.
23:36:47.447 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@756c67cd with form ceskoslovenska_novsia and offset 0.
23:36:47.447 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AB09378 with required changes 2.5853033.
23:36:47.447 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@756c67cd with form ceskoslovenska_novsia and offset 1.
23:36:47.447 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding B003781 with required changes 3.9330144.
23:36:47.447 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@756c67cd with form ceskoslovenska_novsia and offset 2.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 00Q7817 with required changes 6.6867237.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@756c67cd with form ceskoslovenska_novsia and offset 3.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0QZ8178 with required changes 8.077032.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@756c67cd with form ceska_nova and offset 0.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4B39378 with required changes 0.0.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@756c67cd with form ceska_nova and offset 1.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8J93781 with required changes 3.9630141.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@756c67cd with form ceska_nova and offset 2.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 3S37817 with required changes 4.093631.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@756c67cd with form ceska_nova and offset 3.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 9S78178 with required changes 5.6336308.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : AB393ZG with required changes 3.828688.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : B0937GI with required changes 2.60609.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 00378II with required changes 2.5430143.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : 0Q781II with required changes 3.9800787.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : AB09378 with required changes 2.5853033.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : B003781 with required changes 3.9330144.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 6 : 00Q7817 with required changes 6.6867237.
23:36:47.448 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 7 : 0QZ8178 with required changes 8.077032.
23:36:47.451 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 8 : 4B39378 with required changes 0.0.
23:36:47.451 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 9 : 8J93781 with required changes 3.9630141.
23:36:47.451 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 10 : 3S37817 with required changes 4.093631.
23:36:47.451 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 11 : 9S78178 with required changes 5.6336308.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;4B39378&amp;quot;
     but: was &amp;quot;4B39376&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">4B39378
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">4B39376
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="387" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="73 =&gt; image=test_073.jpg extpected=3B97236" status="failed">
                <output type="stdout">23:36:47.846 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6ac756b with form slovensko_nova and offset 0.
23:36:47.847 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0B972QG with required changes 3.8277106.
23:36:47.847 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6ac756b with form ceskoslovenska_novsia and offset 0.
23:36:47.847 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0BQ7238 with required changes 2.6122878.
23:36:47.847 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6ac756b with form ceska_nova and offset 0.
23:36:47.847 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 3B97238 with required changes 0.0.
23:36:47.847 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : 0B972QG with required changes 3.8277106.
23:36:47.847 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : 0BQ7238 with required changes 2.6122878.
23:36:47.847 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 3B97238 with required changes 0.0.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;3B97238&amp;quot;
     but: was &amp;quot;3B97236&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">3B97238
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">3B97236
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="379" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="74 =&gt; image=test_074.jpg extpected=3B29485" status="failed">
                <output type="stdout">23:36:48.229 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6068ebb2 with form slovensko_nova and offset 0.
23:36:48.229 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding QD294IG with required changes 4.9945474.
23:36:48.229 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6068ebb2 with form ceskoslovenska_novsia and offset 0.
23:36:48.229 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding QDZ9485 with required changes 3.7753234.
23:36:48.229 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6068ebb2 with form ceska_nova and offset 0.
23:36:48.229 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1B29485 with required changes 1.2648135.
23:36:48.229 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : QD294IG with required changes 4.9945474.
23:36:48.229 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : QDZ9485 with required changes 3.7753234.
23:36:48.229 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 1B29485 with required changes 1.2648135.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;1B29485&amp;quot;
     but: was &amp;quot;3B29485&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">1B29485
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">3B29485
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="384" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="75 =&gt; image=test_075.jpg extpected=ZA834CO" status="failed">
                <output type="stdout">23:36:48.617 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@100eeedc with form slovensko_nova and offset 0.
23:36:48.617 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ZA834CF with required changes 1.3199999.
23:36:48.617 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@100eeedc with form ceskoslovenska_novsia and offset 0.
23:36:48.617 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ZAQ3406 with required changes 5.266115.
23:36:48.617 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@100eeedc with form ceska_nova and offset 0.
23:36:48.617 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 7A83406 with required changes 5.252365.
23:36:48.617 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : ZA834CF with required changes 1.3199999.
23:36:48.617 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : ZAQ3406 with required changes 5.266115.
23:36:48.617 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 7A83406 with required changes 5.252365.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;ZA834CF&amp;quot;
     but: was &amp;quot;ZA834CO&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">ZA834CF
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">ZA834CO
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="671" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="76 =&gt; image=test_076.jpg extpected=4B21875" status="failed">
                <output type="stdout">23:36:49.293 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@55c03e4 with form slovensko_nova and offset 0.
23:36:49.293 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AP218ZG with required changes 3.9048405.
23:36:49.293 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@55c03e4 with form ceskoslovenska_novsia and offset 0.
23:36:49.293 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding APZ1825 with required changes 2.6533275.
23:36:49.293 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@55c03e4 with form ceska_nova and offset 0.
23:36:49.293 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4P21825 with required changes 2.5845408.
23:36:49.293 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : AP218ZG with required changes 3.9048405.
23:36:49.293 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : APZ1825 with required changes 2.6533275.
23:36:49.293 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 4P21825 with required changes 2.5845408.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;4PZ18Z5&amp;quot;
     but: was &amp;quot;4B21875&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">4PZ18Z5
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">4B21875
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="616" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="77 =&gt; image=test_077.jpg extpected=RK735AS" status="passed">
                <output type="stdout">23:36:49.913 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7878bbdb with form slovensko_nova and offset 0.
23:36:49.913 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK735AS with required changes 0.0.
23:36:49.913 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7878bbdb with form ceskoslovenska_novsia and offset 0.
23:36:49.913 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKT3549 with required changes 3.735478.
23:36:49.913 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7878bbdb with form ceska_nova and offset 0.
23:36:49.913 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6K73549 with required changes 3.8399897.
23:36:49.913 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK735AS with required changes 0.0.
23:36:49.913 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKT3549 with required changes 3.735478.
23:36:49.913 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 6K73549 with required changes 3.8399897.
</output>
            </test>
            <test duration="585" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="78 =&gt; image=test_078.jpg extpected=RK457AS" status="passed">
                <output type="stdout">23:36:50.503 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6a278584 with form slovensko_nova and offset 0.
23:36:50.503 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK457AS with required changes 0.0.
23:36:50.503 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6a278584 with form ceskoslovenska_novsia and offset 0.
23:36:50.503 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKA5745 with required changes 3.671724.
23:36:50.503 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6a278584 with form ceska_nova and offset 0.
23:36:50.503 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K45745 with required changes 3.7459424.
23:36:50.503 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK457AS with required changes 0.0.
23:36:50.503 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKA5745 with required changes 3.671724.
23:36:50.503 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K45745 with required changes 3.7459424.
</output>
            </test>
            <test duration="441" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="79 =&gt; image=test_079.jpg extpected=RK959AF" status="passed">
                <output type="stdout">23:36:50.945 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@75b363c3 with form slovensko_nova and offset 0.
23:36:50.946 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK959AF with required changes 0.0.
23:36:50.946 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@75b363c3 with form ceskoslovenska_novsia and offset 0.
23:36:50.946 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK05946 with required changes 3.8716006.
23:36:50.946 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@75b363c3 with form ceska_nova and offset 0.
23:36:50.946 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K95946 with required changes 4.0074577.
23:36:50.946 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK959AF with required changes 0.0.
23:36:50.946 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK05946 with required changes 3.8716006.
23:36:50.946 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K95946 with required changes 4.0074577.
</output>
            </test>
            <test duration="425" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="80 =&gt; image=test_080.jpg extpected=RK003AB" status="passed">
                <output type="stdout">23:36:51.373 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@ca2be53 with form slovensko_nova and offset 0.
23:36:51.373 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK003AB with required changes 0.0.
23:36:51.373 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@ca2be53 with form ceskoslovenska_novsia and offset 0.
23:36:51.373 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK00346 with required changes 2.4890919.
23:36:51.373 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@ca2be53 with form ceska_nova and offset 0.
23:36:51.373 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K00346 with required changes 3.8088052.
23:36:51.373 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK003AB with required changes 0.0.
23:36:51.373 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK00346 with required changes 2.4890919.
23:36:51.373 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K00346 with required changes 3.8088052.
</output>
            </test>
            <test duration="401" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="81 =&gt; image=test_081.jpg extpected=RK641AL" status="passed">
                <output type="stdout">23:36:51.774 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@77ea960f with form slovensko_nova and offset 0.
23:36:51.774 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IR664IA with required changes 2.9300077.
23:36:51.775 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@77ea960f with form slovensko_nova and offset 1.
23:36:51.775 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK641AL with required changes 0.0.
23:36:51.775 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@77ea960f with form ceskoslovenska_novsia and offset 0.
23:36:51.775 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IRK6414 with required changes 1.2662015.
23:36:51.775 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@77ea960f with form ceskoslovenska_novsia and offset 1.
23:36:51.775 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG4146 with required changes 3.8168745.
23:36:51.775 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@77ea960f with form ceska_nova and offset 0.
23:36:51.775 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 5P66414 with required changes 5.4255786.
23:36:51.775 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@77ea960f with form ceska_nova and offset 1.
23:36:51.775 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 9K64146 with required changes 4.0629478.
23:36:51.775 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IR664IA with required changes 2.9300077.
23:36:51.775 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK641AL with required changes 0.0.
23:36:51.775 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IRK6414 with required changes 1.2662015.
23:36:51.775 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : RKG4146 with required changes 3.8168745.
23:36:51.775 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 5P66414 with required changes 5.4255786.
23:36:51.775 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 9K64146 with required changes 4.0629478.
</output>
            </test>
            <test duration="406" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="82 =&gt; image=test_082.jpg extpected=RK891AU" status="failed">
                <output type="stdout">23:36:52.182 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@36d7a68a with form germany and offset 0.
23:36:52.182 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK0940 with required changes 3.688199.
23:36:52.182 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@36d7a68a with form ceskoslovenska_starsia and offset 0.
23:36:52.182 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK8940 with required changes 2.4894173.
23:36:52.182 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK0940 with required changes 3.688199.
23:36:52.182 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK8940 with required changes 2.4894173.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;RK89AU&amp;quot;
     but: was &amp;quot;RK891AU&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">RK89AU
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">RK891AU
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="14688" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="83 =&gt; image=test_083.jpg extpected=PD935BG" status="failed">
                <output type="stderr">java.lang.AssertionError: 
Expected: is null
     but: was &amp;quot;PD935BG&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">is null
     
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">&amp;quot;PD935BG&amp;quot;
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="427" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="84 =&gt; image=test_084.jpg extpected=PD722BF" status="passed">
                <output type="stdout">23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2a99fa07 with form slovensko_nova and offset 0.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding FP072ZB with required changes 2.4475155.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2a99fa07 with form slovensko_nova and offset 1.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding PD722BF with required changes 0.0.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2a99fa07 with form slovensko_nova and offset 2.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding DY228FJ with required changes 3.885491.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2a99fa07 with form ceskoslovenska_novsia and offset 0.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding FPD7228 with required changes 1.2834142.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2a99fa07 with form ceskoslovenska_novsia and offset 1.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding PDY2286 with required changes 3.922691.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2a99fa07 with form ceskoslovenska_novsia and offset 2.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding DYZ2861 with required changes 5.1755266.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2a99fa07 with form ceska_nova and offset 0.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6P07228 with required changes 3.8438258.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2a99fa07 with form ceska_nova and offset 1.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8U72286 with required changes 5.2283936.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2a99fa07 with form ceska_nova and offset 2.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0T22861 with required changes 5.0613375.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : FP072ZB with required changes 2.4475155.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : PD722BF with required changes 0.0.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : DY228FJ with required changes 3.885491.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : FPD7228 with required changes 1.2834142.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : PDY2286 with required changes 3.922691.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : DYZ2861 with required changes 5.1755266.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 6 : 6P07228 with required changes 3.8438258.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 7 : 8U72286 with required changes 5.2283936.
23:37:07.307 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 8 : 0T22861 with required changes 5.0613375.
</output>
            </test>
            <test duration="447" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="85 =&gt; image=test_085.jpg extpected=RK959AD" status="passed">
                <output type="stdout">23:37:07.758 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@32e7b78d with form slovensko_nova and offset 0.
23:37:07.758 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK959AD with required changes 0.0.
23:37:07.758 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@32e7b78d with form ceskoslovenska_novsia and offset 0.
23:37:07.758 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK05940 with required changes 3.6269999.
23:37:07.758 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@32e7b78d with form ceska_nova and offset 0.
23:37:07.758 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K95940 with required changes 3.7295775.
23:37:07.758 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK959AD with required changes 0.0.
23:37:07.758 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK05940 with required changes 3.6269999.
23:37:07.758 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K95940 with required changes 3.7295775.
</output>
            </test>
            <test duration="402" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="86 =&gt; image=test_086.jpg extpected=RK376AF" status="passed">
                <output type="stdout">23:37:08.162 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a0e33db with form slovensko_nova and offset 0.
23:37:08.162 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK376AF with required changes 0.0.
23:37:08.162 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a0e33db with form ceskoslovenska_novsia and offset 0.
23:37:08.162 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKS7645 with required changes 3.7357175.
23:37:08.162 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a0e33db with form ceska_nova and offset 0.
23:37:08.162 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0K37645 with required changes 3.833357.
23:37:08.162 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK376AF with required changes 0.0.
23:37:08.162 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKS7645 with required changes 3.7357175.
23:37:08.162 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 0K37645 with required changes 3.833357.
</output>
            </test>
            <test duration="364" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="87 =&gt; image=test_087.jpg extpected=RK011AM" status="passed">
                <output type="stdout">23:37:08.527 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@74619273 with form slovensko_nova and offset 0.
23:37:08.527 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK011AM with required changes 0.0.
23:37:08.527 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@74619273 with form ceskoslovenska_novsia and offset 0.
23:37:08.527 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK01140 with required changes 2.6930392.
23:37:08.527 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@74619273 with form ceska_nova and offset 0.
23:37:08.527 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K01140 with required changes 4.0091205.
23:37:08.527 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK011AM with required changes 0.0.
23:37:08.527 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK01140 with required changes 2.6930392.
23:37:08.527 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K01140 with required changes 4.0091205.
</output>
            </test>
            <test duration="392" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="88 =&gt; image=test_088.jpg extpected=LM169AM" status="passed">
                <output type="stdout">23:37:08.920 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@79ec57b8 with form slovensko_nova and offset 0.
23:37:08.920 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding LM169AM with required changes 1.169828.
23:37:08.920 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@79ec57b8 with form ceskoslovenska_novsia and offset 0.
23:37:08.920 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding LMQ6940 with required changes 5.190996.
23:37:08.920 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@79ec57b8 with form ceska_nova and offset 0.
23:37:08.920 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0M16940 with required changes 5.0943995.
23:37:08.920 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : LM169AM with required changes 1.169828.
23:37:08.920 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : LMQ6940 with required changes 5.190996.
23:37:08.920 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 0M16940 with required changes 5.0943995.
</output>
            </test>
            <test duration="427" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="89 =&gt; image=test_089.jpg extpected=RK565AV" status="passed">
                <output type="stdout">23:37:09.347 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7846913f with form slovensko_nova and offset 0.
23:37:09.347 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK565AV with required changes 0.0.
23:37:09.347 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7846913f with form ceskoslovenska_novsia and offset 0.
23:37:09.347 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG6547 with required changes 3.65773.
23:37:09.347 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7846913f with form ceska_nova and offset 0.
23:37:09.347 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0K56547 with required changes 3.7942677.
23:37:09.347 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK565AV with required changes 0.0.
23:37:09.348 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG6547 with required changes 3.65773.
23:37:09.348 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 0K56547 with required changes 3.7942677.
</output>
            </test>
            <test duration="5132" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="90 =&gt; image=test_090.jpg extpected=RK550AO" status="failed">
                <output type="stderr">java.lang.AssertionError: 
Expected: is null
     but: was &amp;quot;RK550AO&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">is null
     
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">&amp;quot;RK550AO&amp;quot;
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="430" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="91 =&gt; image=test_091.jpg extpected=RK977AF" status="passed">
                <output type="stdout">23:37:14.914 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6df87ffd with form slovensko_nova and offset 0.
23:37:14.914 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK977AF with required changes 0.0.
23:37:14.914 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6df87ffd with form ceskoslovenska_novsia and offset 0.
23:37:14.914 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK07745 with required changes 3.69818.
23:37:14.914 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6df87ffd with form ceska_nova and offset 0.
23:37:14.914 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K97745 with required changes 3.9087965.
23:37:14.914 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK977AF with required changes 0.0.
23:37:14.914 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK07745 with required changes 3.69818.
23:37:14.914 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K97745 with required changes 3.9087965.
</output>
            </test>
            <test duration="367" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="92 =&gt; image=test_092.jpg extpected=RK373AK" status="passed">
                <output type="stdout">23:37:15.282 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3e839aa3 with form slovensko_nova and offset 0.
23:37:15.282 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK373AK with required changes 0.0.
23:37:15.283 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3e839aa3 with form ceskoslovenska_novsia and offset 0.
23:37:15.283 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK07346 with required changes 3.8996668.
23:37:15.283 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3e839aa3 with form ceska_nova and offset 0.
23:37:15.283 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K37346 with required changes 4.041884.
23:37:15.283 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK373AK with required changes 0.0.
23:37:15.283 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK07346 with required changes 3.8996668.
23:37:15.283 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K37346 with required changes 4.041884.
</output>
            </test>
            <test duration="377" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="93 =&gt; image=test_093.jpg extpected=RK301AH" status="passed">
                <output type="stdout">23:37:15.660 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@28295554 with form slovensko_nova and offset 0.
23:37:15.660 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK301AH with required changes 0.0.
23:37:15.660 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@28295554 with form ceskoslovenska_novsia and offset 0.
23:37:15.660 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKS0148 with required changes 3.8960931.
23:37:15.660 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@28295554 with form ceska_nova and offset 0.
23:37:15.660 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K30148 with required changes 4.0111513.
23:37:15.660 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK301AH with required changes 0.0.
23:37:15.660 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKS0148 with required changes 3.8960931.
23:37:15.660 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K30148 with required changes 4.0111513.
</output>
            </test>
            <test duration="717" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="94 =&gt; image=test_094.jpg extpected=RK069AV" status="failed">
                <output type="stderr">java.lang.AssertionError: 
Expected: is null
     but: was &amp;quot;RK069AV&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">is null
     
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">&amp;quot;RK069AV&amp;quot;
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="511" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="95 =&gt; image=test_095.jpg extpected=NO626AT" status="failed">
                <output type="stdout">23:37:16.899 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4189e668 with form germany and offset 0.
23:37:16.899 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding N0G264 with required changes 2.4363954.
23:37:16.899 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4189e668 with form ceskoslovenska_starsia and offset 0.
23:37:16.899 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding N06264 with required changes 1.2683381.
23:37:16.899 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : N0G264 with required changes 2.4363954.
23:37:16.899 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : N06264 with required changes 1.2683381.
</output>
                <output type="stderr">java.lang.AssertionError: 
Expected: is &amp;quot;N06264&amp;quot;
     but: was &amp;quot;NO626AT&amp;quot;
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">N06264
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">NO626AT
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSigns(RecognitionAllIT.java:159)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="524" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="96 =&gt; image=test_096.jpg extpected=RK735AS" status="passed">
                <output type="stdout">23:37:17.425 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@104cfb24 with form slovensko_nova and offset 0.
23:37:17.425 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK735AS with required changes 0.0.
23:37:17.425 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@104cfb24 with form ceskoslovenska_novsia and offset 0.
23:37:17.425 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKV3548 with required changes 3.7464986.
23:37:17.425 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@104cfb24 with form ceska_nova and offset 0.
23:37:17.425 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K73548 with required changes 3.8082192.
23:37:17.425 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK735AS with required changes 0.0.
23:37:17.425 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKV3548 with required changes 3.7464986.
23:37:17.425 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K73548 with required changes 3.8082192.
</output>
            </test>
            <test duration="525" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSigns" name="97 =&gt; image=test_097.jpg extpected=RK603AV" status="passed">
                <output type="stdout">23:37:17.950 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3c68e82 with form slovensko_nova and offset 0.
23:37:17.950 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK603AV with required changes 1.130477.
23:37:17.950 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3c68e82 with form ceskoslovenska_novsia and offset 0.
23:37:17.951 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG0347 with required changes 2.594714.
23:37:17.951 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3c68e82 with form ceska_nova and offset 0.
23:37:17.951 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K60347 with required changes 5.1102314.
23:37:17.951 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK603AV with required changes 1.130477.
23:37:17.951 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG0347 with required changes 2.594714.
23:37:17.951 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K60347 with required changes 5.1102314.
</output>
            </test>
        </suite>
        <suite duration="60532" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="Checks if any resulting lisence plates are null" status="failed">
            <test duration="402" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="1 =&gt; image=test_001.jpg extpected=PP587AO" status="passed">
                <output type="stdout">23:37:18.367 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@52f7fa65 with form slovensko_nova and offset 0.
23:37:18.367 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding PP587A0 with required changes 0.0.
23:37:18.367 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@52f7fa65 with form ceskoslovenska_novsia and offset 0.
23:37:18.367 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding PPG8740 with required changes 2.5413024.
23:37:18.367 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@52f7fa65 with form ceska_nova and offset 0.
23:37:18.367 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8P58740 with required changes 2.611884.
23:37:18.367 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : PP587A0 with required changes 0.0.
23:37:18.367 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : PPG8740 with required changes 2.5413024.
23:37:18.367 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8P58740 with required changes 2.611884.
</output>
            </test>
            <test duration="580" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="2 =&gt; image=test_002.jpg extpected=RK755AJ" status="passed">
                <output type="stdout">23:37:18.950 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d483ebe with form slovensko_nova and offset 0.
23:37:18.950 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK755AJ with required changes 0.0.
23:37:18.950 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d483ebe with form ceskoslovenska_novsia and offset 0.
23:37:18.950 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKT5543 with required changes 3.80859.
23:37:18.950 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d483ebe with form ceska_nova and offset 0.
23:37:18.950 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K75543 with required changes 3.9295979.
23:37:18.950 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK755AJ with required changes 0.0.
23:37:18.950 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKT5543 with required changes 3.80859.
23:37:18.950 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K75543 with required changes 3.9295979.
</output>
            </test>
            <test duration="436" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="3 =&gt; image=test_003.jpg extpected=SI819AK" status="passed">
                <output type="stdout">23:37:19.387 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4c114687 with form slovensko_nova and offset 0.
23:37:19.387 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding SI819AK with required changes 0.0.
23:37:19.387 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4c114687 with form ceskoslovenska_novsia and offset 0.
23:37:19.387 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding SIB1946 with required changes 3.9096615.
23:37:19.387 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4c114687 with form ceska_nova and offset 0.
23:37:19.387 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 9A81946 with required changes 5.2543335.
23:37:19.387 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : SI819AK with required changes 0.0.
23:37:19.387 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : SIB1946 with required changes 3.9096615.
23:37:19.387 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 9A81946 with required changes 5.2543335.
</output>
            </test>
            <test duration="403" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="4 =&gt; image=test_004.jpg extpected=RK115AN" status="passed">
                <output type="stdout">23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1a914a00 with form slovensko_nova and offset 0.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding FR611GA with required changes 2.6575527.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1a914a00 with form slovensko_nova and offset 1.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK115AN with required changes 0.0.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1a914a00 with form slovensko_nova and offset 2.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KI154NI with required changes 2.6202226.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1a914a00 with form slovensko_nova and offset 3.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IQ540II with required changes 5.387368.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1a914a00 with form slovensko_nova and offset 4.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding QG407IJ with required changes 8.023025.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1a914a00 with form ceskoslovenska_novsia and offset 0.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding FRK1154 with required changes 1.2850207.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1a914a00 with form ceskoslovenska_novsia and offset 1.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKI1540 with required changes 3.9773686.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1a914a00 with form ceskoslovenska_novsia and offset 2.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KIQ5407 with required changes 6.777368.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1a914a00 with form ceskoslovenska_novsia and offset 3.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IQG4078 with required changes 9.398227.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1a914a00 with form ceskoslovenska_novsia and offset 4.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding QGA0781 with required changes 6.7780037.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1a914a00 with form ceska_nova and offset 0.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6P61154 with required changes 5.2663946.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1a914a00 with form ceska_nova and offset 1.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K11540 with required changes 3.9876192.
23:37:19.790 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1a914a00 with form ceska_nova and offset 2.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6A15407 with required changes 6.9238663.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1a914a00 with form ceska_nova and offset 3.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1M54078 with required changes 6.9021664.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1a914a00 with form ceska_nova and offset 4.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1S40781 with required changes 6.6594954.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : FR611GA with required changes 2.6575527.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK115AN with required changes 0.0.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : KI154NI with required changes 2.6202226.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : IQ540II with required changes 5.387368.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : QG407IJ with required changes 8.023025.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : FRK1154 with required changes 1.2850207.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 6 : RKI1540 with required changes 3.9773686.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 7 : KIQ5407 with required changes 6.777368.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 8 : IQG4078 with required changes 9.398227.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 9 : QGA0781 with required changes 6.7780037.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 10 : 6P61154 with required changes 5.2663946.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 11 : 8K11540 with required changes 3.9876192.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 12 : 6A15407 with required changes 6.9238663.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 13 : 1M54078 with required changes 6.9021664.
23:37:19.791 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 14 : 1S40781 with required changes 6.6594954.
</output>
            </test>
            <test duration="387" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="5 =&gt; image=test_005.jpg extpected=TS260AK" status="passed">
                <output type="stdout">23:37:20.179 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4aea57dc with form slovensko_nova and offset 0.
23:37:20.180 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding TS260AK with required changes 1.1013808.
23:37:20.180 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4aea57dc with form ceskoslovenska_novsia and offset 0.
23:37:20.180 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding TSZ6044 with required changes 5.0186734.
23:37:20.180 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4aea57dc with form ceska_nova and offset 0.
23:37:20.180 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 7S26044 with required changes 5.0936074.
23:37:20.180 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : TS260AK with required changes 1.1013808.
23:37:20.180 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : TSZ6044 with required changes 5.0186734.
23:37:20.180 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 7S26044 with required changes 5.0936074.
</output>
            </test>
            <test duration="379" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="6 =&gt; image=test_006.jpg extpected=RK099AN" status="passed">
                <output type="stdout">23:37:20.567 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@77401977 with form slovensko_nova and offset 0.
23:37:20.567 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK099AN with required changes 0.0.
23:37:20.567 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@77401977 with form ceskoslovenska_novsia and offset 0.
23:37:20.567 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK09940 with required changes 2.6034598.
23:37:20.567 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@77401977 with form ceska_nova and offset 0.
23:37:20.567 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K09940 with required changes 3.9559445.
23:37:20.567 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK099AN with required changes 0.0.
23:37:20.567 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK09940 with required changes 2.6034598.
23:37:20.567 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K09940 with required changes 3.9559445.
</output>
            </test>
            <test duration="417" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="7 =&gt; image=test_007.jpg extpected=RK828AG" status="passed">
                <output type="stdout">23:37:20.985 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2de96eba with form slovensko_nova and offset 0.
23:37:20.985 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK828AG with required changes 0.0.
23:37:20.985 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2de96eba with form ceskoslovenska_novsia and offset 0.
23:37:20.985 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK02840 with required changes 3.509282.
23:37:20.985 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2de96eba with form ceska_nova and offset 0.
23:37:20.985 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 9K82840 with required changes 3.7251778.
23:37:20.985 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK828AG with required changes 0.0.
23:37:20.985 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK02840 with required changes 3.509282.
23:37:20.985 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 9K82840 with required changes 3.7251778.
</output>
            </test>
            <test duration="498" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="8 =&gt; image=test_008.jpg extpected=LM298AI" status="passed">
                <output type="stdout">23:37:21.485 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@d271d6c with form slovensko_nova and offset 0.
23:37:21.485 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding LM298AI with required changes 0.0.
23:37:21.485 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@d271d6c with form ceskoslovenska_novsia and offset 0.
23:37:21.485 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding LMZ9848 with required changes 3.8790967.
23:37:21.485 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@d271d6c with form ceska_nova and offset 0.
23:37:21.485 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0M29848 with required changes 3.9920275.
23:37:21.485 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : LM298AI with required changes 0.0.
23:37:21.485 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : LMZ9848 with required changes 3.8790967.
23:37:21.485 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 0M29848 with required changes 3.9920275.
</output>
            </test>
            <test duration="360" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="9 =&gt; image=test_009.jpg extpected=1T43213" status="passed">
                <output type="stdout">23:37:21.845 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@66e218d8 with form slovensko_nova and offset 0.
23:37:21.846 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MT432J0 with required changes 4.1800003.
23:37:21.846 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@66e218d8 with form ceskoslovenska_novsia and offset 0.
23:37:21.846 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MTA3213 with required changes 2.6591158.
23:37:21.846 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@66e218d8 with form ceska_nova and offset 0.
23:37:21.846 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1T43213 with required changes 0.0.
23:37:21.846 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : MT432J0 with required changes 4.1800003.
23:37:21.846 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : MTA3213 with required changes 2.6591158.
23:37:21.846 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 1T43213 with required changes 0.0.
</output>
            </test>
            <test duration="355" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="10 =&gt; image=test_010.jpg extpected=RK248AH" status="passed">
                <output type="stdout">23:37:22.203 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@587f6634 with form slovensko_nova and offset 0.
23:37:22.203 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK248AH with required changes 0.0.
23:37:22.203 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@587f6634 with form ceskoslovenska_novsia and offset 0.
23:37:22.203 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKZ4840 with required changes 3.808128.
23:37:22.203 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@587f6634 with form ceska_nova and offset 0.
23:37:22.203 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K24840 with required changes 3.8605149.
23:37:22.203 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK248AH with required changes 0.0.
23:37:22.203 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKZ4840 with required changes 3.808128.
23:37:22.203 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K24840 with required changes 3.8605149.
</output>
            </test>
            <test duration="365" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="11 =&gt; image=test_011.jpg extpected=RK346AL" status="passed">
                <output type="stdout">23:37:22.568 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@472dbaf5 with form slovensko_nova and offset 0.
23:37:22.568 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK346AL with required changes 0.0.
23:37:22.568 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@472dbaf5 with form ceskoslovenska_novsia and offset 0.
23:37:22.569 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK04640 with required changes 3.8606079.
23:37:22.569 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@472dbaf5 with form ceska_nova and offset 0.
23:37:22.569 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K34640 with required changes 4.000284.
23:37:22.569 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK346AL with required changes 0.0.
23:37:22.569 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK04640 with required changes 3.8606079.
23:37:22.569 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K34640 with required changes 4.000284.
</output>
            </test>
            <test duration="575" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="12 =&gt; image=test_012.jpg extpected=RK291AT" status="passed">
                <output type="stdout">23:37:23.144 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@b889cb6 with form slovensko_nova and offset 0.
23:37:23.145 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IR629MA with required changes 2.9418926.
23:37:23.145 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@b889cb6 with form ceskoslovenska_novsia and offset 0.
23:37:23.145 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IRK2914 with required changes 1.2485034.
23:37:23.145 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@b889cb6 with form ceska_nova and offset 0.
23:37:23.145 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8P62914 with required changes 5.4340286.
23:37:23.145 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IR629MA with required changes 2.9418926.
23:37:23.145 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : IRK2914 with required changes 1.2485034.
23:37:23.145 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8P62914 with required changes 5.4340286.
</output>
            </test>
            <test duration="334" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="13 =&gt; image=test_013.jpg extpected=RK857AI" status="passed">
                <output type="stdout">23:37:23.480 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@16120270 with form slovensko_nova and offset 0.
23:37:23.480 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK857AI with required changes 0.0.
23:37:23.480 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@16120270 with form ceskoslovenska_novsia and offset 0.
23:37:23.480 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG5748 with required changes 4.00726.
23:37:23.480 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@16120270 with form ceska_nova and offset 0.
23:37:23.480 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K85748 with required changes 3.9998698.
23:37:23.480 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK857AI with required changes 0.0.
23:37:23.480 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG5748 with required changes 4.00726.
23:37:23.480 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K85748 with required changes 3.9998698.
</output>
            </test>
            <test duration="322" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="14 =&gt; image=test_014.jpg extpected=RK576AH" status="passed">
                <output type="stdout">23:37:23.803 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@23cb8fcb with form slovensko_nova and offset 0.
23:37:23.803 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK576AH with required changes 0.0.
23:37:23.803 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@23cb8fcb with form ceskoslovenska_novsia and offset 0.
23:37:23.803 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG7641 with required changes 3.910772.
23:37:23.803 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@23cb8fcb with form ceska_nova and offset 0.
23:37:23.803 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K57641 with required changes 4.0200567.
23:37:23.803 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK576AH with required changes 0.0.
23:37:23.803 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG7641 with required changes 3.910772.
23:37:23.803 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K57641 with required changes 4.0200567.
</output>
            </test>
            <test duration="487" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="15 =&gt; image=test_015.jpg extpected=RK019AF" status="passed">
                <output type="stdout">23:37:24.290 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@18fa5af6 with form slovensko_nova and offset 0.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IR6010A with required changes 2.6182609.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@18fa5af6 with form slovensko_nova and offset 1.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK019AF with required changes 0.0.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@18fa5af6 with form ceskoslovenska_novsia and offset 0.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IRK0194 with required changes 1.2505882.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@18fa5af6 with form ceskoslovenska_novsia and offset 1.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK01946 with required changes 2.590923.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@18fa5af6 with form ceska_nova and offset 0.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 5P60194 with required changes 5.485579.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@18fa5af6 with form ceska_nova and offset 1.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K01946 with required changes 3.90511.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IR6010A with required changes 2.6182609.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK019AF with required changes 0.0.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IRK0194 with required changes 1.2505882.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : RK01946 with required changes 2.590923.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 5P60194 with required changes 5.485579.
23:37:24.291 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 8K01946 with required changes 3.90511.
</output>
            </test>
            <test duration="395" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="16 =&gt; image=test_016.jpg extpected=BB751BH" status="passed">
                <output type="stdout">23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d7f966f with form slovensko_nova and offset 0.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BB751BH with required changes 1.2306825.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d7f966f with form slovensko_nova and offset 1.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BT516HI with required changes 2.5095441.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d7f966f with form ceskoslovenska_novsia and offset 0.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BBT5160 with required changes 5.048017.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d7f966f with form ceskoslovenska_novsia and offset 1.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BTG1607 with required changes 6.471463.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d7f966f with form ceska_nova and offset 0.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8B75160 with required changes 2.5621188.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d7f966f with form ceska_nova and offset 1.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6T51607 with required changes 6.501644.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : BB751BH with required changes 1.2306825.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : BT516HI with required changes 2.5095441.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : BBT5160 with required changes 5.048017.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : BTG1607 with required changes 6.471463.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 8B75160 with required changes 2.5621188.
23:37:24.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 6T51607 with required changes 6.501644.
</output>
            </test>
            <test duration="349" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="17 =&gt; image=test_017.jpg extpected=RK876AD" status="passed">
                <output type="stdout">23:37:25.037 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@236f3885 with form slovensko_nova and offset 0.
23:37:25.037 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK867AD with required changes 0.0.
23:37:25.037 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@236f3885 with form ceskoslovenska_novsia and offset 0.
23:37:25.037 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK06740 with required changes 3.6639698.
23:37:25.037 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@236f3885 with form ceska_nova and offset 0.
23:37:25.037 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K86740 with required changes 3.8262224.
23:37:25.037 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK867AD with required changes 0.0.
23:37:25.037 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK06740 with required changes 3.6639698.
23:37:25.037 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K86740 with required changes 3.8262224.
</output>
            </test>
            <test duration="383" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="18 =&gt; image=test_018.jpg extpected=RK884AL" status="passed">
                <output type="stdout">23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7f20dfd5 with form slovensko_nova and offset 0.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IR488AA with required changes 2.6699998.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7f20dfd5 with form slovensko_nova and offset 1.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK884AL with required changes 0.0.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7f20dfd5 with form ceskoslovenska_novsia and offset 0.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IRK8844 with required changes 1.4.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7f20dfd5 with form ceskoslovenska_novsia and offset 1.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK08442 with required changes 4.1.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7f20dfd5 with form ceska_nova and offset 0.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2P48844 with required changes 5.6.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7f20dfd5 with form ceska_nova and offset 1.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K88442 with required changes 4.2400002.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IR488AA with required changes 2.6699998.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK884AL with required changes 0.0.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IRK8844 with required changes 1.4.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : RK08442 with required changes 4.1.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 2P48844 with required changes 5.6.
23:37:25.421 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 2K88442 with required changes 4.2400002.
</output>
            </test>
            <test duration="371" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="19 =&gt; image=test_019.jpg extpected=RK865AC" status="passed">
                <output type="stdout">23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@75c3584e with form slovensko_nova and offset 0.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK786GA with required changes 2.5196793.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@75c3584e with form slovensko_nova and offset 1.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KY865AC with required changes 0.0.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@75c3584e with form ceskoslovenska_novsia and offset 0.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKY8654 with required changes 1.2320906.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@75c3584e with form ceskoslovenska_novsia and offset 1.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KYG6540 with required changes 3.6115773.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@75c3584e with form ceska_nova and offset 0.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K78654 with required changes 3.907093.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@75c3584e with form ceska_nova and offset 1.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6T86540 with required changes 5.169631.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK786GA with required changes 2.5196793.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : KY865AC with required changes 0.0.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : RKY8654 with required changes 1.2320906.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : KYG6540 with required changes 3.6115773.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 2K78654 with required changes 3.907093.
23:37:25.793 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 6T86540 with required changes 5.169631.
</output>
            </test>
            <test duration="508" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="20 =&gt; image=test_020.jpg extpected=RK906AJ" status="passed">
                <output type="stdout">23:37:26.303 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@614ae4eb with form slovensko_nova and offset 0.
23:37:26.303 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK906AJ with required changes 0.0.
23:37:26.303 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@614ae4eb with form ceskoslovenska_novsia and offset 0.
23:37:26.303 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK00643 with required changes 3.6389356.
23:37:26.303 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@614ae4eb with form ceska_nova and offset 0.
23:37:26.303 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0K90643 with required changes 3.834578.
23:37:26.303 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK906AJ with required changes 0.0.
23:37:26.303 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK00643 with required changes 3.6389356.
23:37:26.303 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 0K90643 with required changes 3.834578.
</output>
            </test>
            <test duration="399" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="21 =&gt; image=test_021.jpg extpected=RK855AP" status="passed">
                <output type="stdout">23:37:26.703 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5857d723 with form slovensko_nova and offset 0.
23:37:26.703 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK855AP with required changes 0.0.
23:37:26.703 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5857d723 with form ceskoslovenska_novsia and offset 0.
23:37:26.703 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKB5540 with required changes 3.7525105.
23:37:26.703 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5857d723 with form ceska_nova and offset 0.
23:37:26.703 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K85540 with required changes 3.9531856.
23:37:26.703 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK855AP with required changes 0.0.
23:37:26.703 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKB5540 with required changes 3.7525105.
23:37:26.703 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K85540 with required changes 3.9531856.
</output>
            </test>
            <test duration="366" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="22 =&gt; image=test_022.jpg extpected=RK875AE" status="passed">
                <output type="stdout">23:37:27.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@38b7004d with form slovensko_nova and offset 0.
23:37:27.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK875AE with required changes 1.2442422.
23:37:27.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@38b7004d with form ceskoslovenska_novsia and offset 0.
23:37:27.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK07545 with required changes 5.008489.
23:37:27.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@38b7004d with form ceska_nova and offset 0.
23:37:27.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 9K87545 with required changes 5.136349.
23:37:27.064 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK875AE with required changes 1.2442422.
23:37:27.065 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK07545 with required changes 5.008489.
23:37:27.065 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 9K87545 with required changes 5.136349.
</output>
            </test>
            <test duration="639" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="23 =&gt; image=test_023.jpg extpected=RK612AL" status="passed">
                <output type="stdout">23:37:27.711 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@220e1b7b with form slovensko_nova and offset 0.
23:37:27.711 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK612AL with required changes 1.1495491.
23:37:27.711 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@220e1b7b with form ceskoslovenska_novsia and offset 0.
23:37:27.711 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG1246 with required changes 2.6512265.
23:37:27.711 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@220e1b7b with form ceska_nova and offset 0.
23:37:27.711 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K61246 with required changes 5.1721034.
23:37:27.711 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK612AL with required changes 1.1495491.
23:37:27.711 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG1246 with required changes 2.6512265.
23:37:27.711 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K61246 with required changes 5.1721034.
</output>
            </test>
            <test duration="416" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="24 =&gt; image=test_024.jpg extpected=RK026AJ" status="passed">
                <output type="stdout">23:37:28.128 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@66b3eab0 with form slovensko_nova and offset 0.
23:37:28.129 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK026AJ with required changes 1.1146505.
23:37:28.129 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@66b3eab0 with form ceskoslovenska_novsia and offset 0.
23:37:28.129 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK02643 with required changes 3.6814122.
23:37:28.129 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@66b3eab0 with form ceska_nova and offset 0.
23:37:28.129 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K02643 with required changes 5.0526066.
23:37:28.129 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK026AJ with required changes 1.1146505.
23:37:28.129 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK02643 with required changes 3.6814122.
23:37:28.129 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K02643 with required changes 5.0526066.
</output>
            </test>
            <test duration="375" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="25 =&gt; image=test_025.jpg extpected=RK896AO" status="passed">
                <output type="stdout">23:37:28.508 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@67d55a46 with form slovensko_nova and offset 0.
23:37:28.508 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK896A0 with required changes 0.0.
23:37:28.508 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@67d55a46 with form ceskoslovenska_novsia and offset 0.
23:37:28.508 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG9640 with required changes 2.4399729.
23:37:28.508 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@67d55a46 with form ceska_nova and offset 0.
23:37:28.508 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K89640 with required changes 2.541915.
23:37:28.508 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK896A0 with required changes 0.0.
23:37:28.508 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG9640 with required changes 2.4399729.
23:37:28.508 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K89640 with required changes 2.541915.
</output>
            </test>
            <test duration="422" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="26 =&gt; image=test_026.jpg extpected=RK492AU" status="passed">
                <output type="stdout">23:37:28.931 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@39921410 with form slovensko_nova and offset 0.
23:37:28.931 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK492AU with required changes 0.0.
23:37:28.931 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@39921410 with form ceskoslovenska_novsia and offset 0.
23:37:28.931 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKA9240 with required changes 3.6187634.
23:37:28.931 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@39921410 with form ceska_nova and offset 0.
23:37:28.931 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K49240 with required changes 3.6764011.
23:37:28.931 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK492AU with required changes 0.0.
23:37:28.931 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKA9240 with required changes 3.6187634.
23:37:28.931 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K49240 with required changes 3.6764011.
</output>
            </test>
            <test duration="413" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="27 =&gt; image=test_027.jpg extpected=RK776AI" status="passed">
                <output type="stdout">23:37:29.345 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@62158618 with form slovensko_nova and offset 0.
23:37:29.345 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK776AI with required changes 0.0.
23:37:29.345 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@62158618 with form ceskoslovenska_novsia and offset 0.
23:37:29.345 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKV7641 with required changes 3.912303.
23:37:29.345 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@62158618 with form ceska_nova and offset 0.
23:37:29.345 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K77641 with required changes 4.008772.
23:37:29.345 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK776AI with required changes 0.0.
23:37:29.345 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKV7641 with required changes 3.912303.
23:37:29.345 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K77641 with required changes 4.008772.
</output>
            </test>
            <test duration="491" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="28 =&gt; image=test_028.jpg extpected=LM633BD" status="failed">
                <output type="stderr">java.lang.AssertionError: 
Expected: is not null
     but: was null
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">is not null
     
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">null
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls(RecognitionAllIT.java:177)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="401" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="29 =&gt; image=test_029.jpg extpected=LM010BE" status="passed">
                <output type="stdout">23:37:30.249 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3c5cb013 with form slovensko_nova and offset 0.
23:37:30.249 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding LM010BE with required changes 0.0.
23:37:30.249 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3c5cb013 with form ceskoslovenska_novsia and offset 0.
23:37:30.249 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding LM01056 with required changes 2.5909438.
23:37:30.249 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3c5cb013 with form ceska_nova and offset 0.
23:37:30.249 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 5M01056 with required changes 3.9709659.
23:37:30.249 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : LM010BE with required changes 0.0.
23:37:30.249 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : LM01056 with required changes 2.5909438.
23:37:30.249 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 5M01056 with required changes 3.9709659.
</output>
            </test>
            <test duration="345" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="30 =&gt; image=test_030.jpg extpected=RK819AM" status="passed">
                <output type="stdout">23:37:30.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@58701e8c with form slovensko_nova and offset 0.
23:37:30.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK819AM with required changes 0.0.
23:37:30.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@58701e8c with form ceskoslovenska_novsia and offset 0.
23:37:30.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG1940 with required changes 3.7576818.
23:37:30.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@58701e8c with form ceska_nova and offset 0.
23:37:30.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K81940 with required changes 3.9379601.
23:37:30.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK819AM with required changes 0.0.
23:37:30.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG1940 with required changes 3.7576818.
23:37:30.595 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K81940 with required changes 3.9379601.
</output>
            </test>
            <test duration="368" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="31 =&gt; image=test_031.jpg extpected=RK619AS" status="passed">
                <output type="stdout">23:37:30.964 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@128d397c with form slovensko_nova and offset 0.
23:37:30.964 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK819AS with required changes 0.0.
23:37:30.964 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@128d397c with form ceskoslovenska_novsia and offset 0.
23:37:30.964 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG1948 with required changes 3.6565657.
23:37:30.964 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@128d397c with form ceska_nova and offset 0.
23:37:30.964 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K81948 with required changes 3.8145037.
23:37:30.964 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK819AS with required changes 0.0.
23:37:30.964 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG1948 with required changes 3.6565657.
23:37:30.964 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K81948 with required changes 3.8145037.
</output>
            </test>
            <test duration="368" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="32 =&gt; image=test_032.jpg extpected=RK763AS" status="passed">
                <output type="stdout">23:37:31.332 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6de2344a with form slovensko_nova and offset 0.
23:37:31.332 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IR678SA with required changes 3.9043312.
23:37:31.332 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6de2344a with form slovensko_nova and offset 1.
23:37:31.333 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK783AS with required changes 1.1546528.
23:37:31.333 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6de2344a with form ceskoslovenska_novsia and offset 0.
23:37:31.333 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IRK7834 with required changes 2.3903074.
23:37:31.333 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6de2344a with form ceskoslovenska_novsia and offset 1.
23:37:31.333 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKT8348 with required changes 4.8696933.
23:37:31.333 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6de2344a with form ceska_nova and offset 0.
23:37:31.333 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 7P67834 with required changes 6.5625544.
23:37:31.333 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6de2344a with form ceska_nova and offset 1.
23:37:31.333 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6K78348 with required changes 5.0242786.
23:37:31.333 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IR678SA with required changes 3.9043312.
23:37:31.333 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK783AS with required changes 1.1546528.
23:37:31.333 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IRK7834 with required changes 2.3903074.
23:37:31.333 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : RKT8348 with required changes 4.8696933.
23:37:31.333 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 7P67834 with required changes 6.5625544.
23:37:31.333 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 6K78348 with required changes 5.0242786.
</output>
            </test>
            <test duration="361" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="33 =&gt; image=test_033.jpg extpected=RK082AL" status="passed">
                <output type="stdout">23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@44103266 with form slovensko_nova and offset 0.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ER408ZA with required changes 2.646887.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@44103266 with form slovensko_nova and offset 1.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK082AL with required changes 0.0.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@44103266 with form slovensko_nova and offset 2.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding K0824LJ with required changes 2.4900398.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@44103266 with form ceskoslovenska_novsia and offset 0.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ERK0824 with required changes 1.2800398.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@44103266 with form ceskoslovenska_novsia and offset 1.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK08245 with required changes 2.6406186.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@44103266 with form ceskoslovenska_novsia and offset 2.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding K0G2451 with required changes 3.825121.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@44103266 with form ceska_nova and offset 0.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 5P40824 with required changes 5.31585.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@44103266 with form ceska_nova and offset 1.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K08245 with required changes 3.9354837.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@44103266 with form ceska_nova and offset 2.
23:37:31.694 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4U82451 with required changes 5.1649933.
23:37:31.695 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : ER408ZA with required changes 2.646887.
23:37:31.695 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK082AL with required changes 0.0.
23:37:31.695 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : K0824LJ with required changes 2.4900398.
23:37:31.695 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : ERK0824 with required changes 1.2800398.
23:37:31.695 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : RK08245 with required changes 2.6406186.
23:37:31.695 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : K0G2451 with required changes 3.825121.
23:37:31.695 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 6 : 5P40824 with required changes 5.31585.
23:37:31.695 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 7 : 8K08245 with required changes 3.9354837.
23:37:31.695 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 8 : 4U82451 with required changes 5.1649933.
</output>
            </test>
            <test duration="413" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="34 =&gt; image=test_034.jpg extpected=SG47471" status="passed">
                <output type="stdout">23:37:32.111 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3b171fbd with form slovensko_nova and offset 0.
23:37:32.111 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding SG471ZJ with required changes 3.9189239.
23:37:32.111 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3b171fbd with form ceskoslovenska_novsia and offset 0.
23:37:32.111 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding SGM7171 with required changes 5.1941915.
23:37:32.111 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3b171fbd with form ceska_nova and offset 0.
23:37:32.111 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 5C47171 with required changes 5.07472.
23:37:32.111 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : SG471ZJ with required changes 3.9189239.
23:37:32.111 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : SGM7171 with required changes 5.1941915.
23:37:32.111 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 5C47171 with required changes 5.07472.
</output>
            </test>
            <test duration="594" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="35 =&gt; image=test_035.jpg extpected=BA738DE" status="passed">
                <output type="stdout">23:37:32.706 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@755a4ef5 with form slovensko_nova and offset 0.
23:37:32.706 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BA738DE with required changes 0.0.
23:37:32.706 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@755a4ef5 with form slovensko_nova and offset 1.
23:37:32.706 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AT380EJ with required changes 3.878098.
23:37:32.706 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@755a4ef5 with form ceskoslovenska_novsia and offset 0.
23:37:32.706 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BAT3802 with required changes 3.898098.
23:37:32.706 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@755a4ef5 with form ceskoslovenska_novsia and offset 1.
23:37:32.706 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ATJ8021 with required changes 5.202892.
23:37:32.706 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@755a4ef5 with form ceska_nova and offset 0.
23:37:32.706 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8A73802 with required changes 3.7415986.
23:37:32.706 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@755a4ef5 with form ceska_nova and offset 1.
23:37:32.707 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4T38021 with required changes 5.1973486.
23:37:32.707 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : BA738DE with required changes 0.0.
23:37:32.707 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : AT380EJ with required changes 3.878098.
23:37:32.707 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : BAT3802 with required changes 3.898098.
23:37:32.707 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : ATJ8021 with required changes 5.202892.
23:37:32.707 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 8A73802 with required changes 3.7415986.
23:37:32.707 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 4T38021 with required changes 5.1973486.
</output>
            </test>
            <test duration="400" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="36 =&gt; image=test_036.jpg extpected=RK708AI" status="passed">
                <output type="stdout">23:37:33.107 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5e572b08 with form slovensko_nova and offset 0.
23:37:33.107 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding HA708AI with required changes 1.39.
23:37:33.107 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5e572b08 with form ceskoslovenska_novsia and offset 0.
23:37:33.107 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding HAV0848 with required changes 5.5599995.
23:37:33.107 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5e572b08 with form ceska_nova and offset 0.
23:37:33.107 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8A70848 with required changes 5.5999994.
23:37:33.107 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : HA708AI with required changes 1.39.
23:37:33.107 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : HAV0848 with required changes 5.5599995.
23:37:33.107 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8A70848 with required changes 5.5999994.
</output>
            </test>
            <test duration="566" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="37 =&gt; image=test_037.jpg extpected=RK260AR" status="passed">
                <output type="stdout">23:37:33.673 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@73973e77 with form slovensko_nova and offset 0.
23:37:33.673 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK260AR with required changes 1.2176998.
23:37:33.673 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@73973e77 with form ceskoslovenska_novsia and offset 0.
23:37:33.673 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKZ6048 with required changes 5.141021.
23:37:33.673 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@73973e77 with form ceska_nova and offset 0.
23:37:33.673 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K26048 with required changes 5.206339.
23:37:33.673 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK260AR with required changes 1.2176998.
23:37:33.673 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKZ6048 with required changes 5.141021.
23:37:33.673 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K26048 with required changes 5.206339.
</output>
            </test>
            <test duration="403" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="38 =&gt; image=test_038.jpg extpected=RK340A0" status="passed">
                <output type="stdout">23:37:34.077 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@cda988 with form slovensko_nova and offset 0.
23:37:34.077 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK340A0 with required changes 0.0.
23:37:34.077 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@cda988 with form ceskoslovenska_novsia and offset 0.
23:37:34.077 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKS4040 with required changes 2.4608212.
23:37:34.077 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@cda988 with form ceska_nova and offset 0.
23:37:34.077 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K34040 with required changes 2.5560348.
23:37:34.077 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK340A0 with required changes 0.0.
23:37:34.077 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKS4040 with required changes 2.4608212.
23:37:34.077 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K34040 with required changes 2.5560348.
</output>
            </test>
            <test duration="383" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="39 =&gt; image=test_039.jpg extpected=RK892AE" status="passed">
                <output type="stdout">23:37:34.460 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7db63a01 with form slovensko_nova and offset 0.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK892AF with required changes 0.0.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7db63a01 with form slovensko_nova and offset 1.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KI924FJ with required changes 3.94.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7db63a01 with form ceskoslovenska_novsia and offset 0.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKI9246 with required changes 4.03.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7db63a01 with form ceskoslovenska_novsia and offset 1.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KI02461 with required changes 5.3700004.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7db63a01 with form ceska_nova and offset 0.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K89246 with required changes 4.1.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7db63a01 with form ceska_nova and offset 1.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6S92461 with required changes 5.57.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK892AF with required changes 0.0.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : KI924FJ with required changes 3.94.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : RKI9246 with required changes 4.03.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : KI02461 with required changes 5.3700004.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 8K89246 with required changes 4.1.
23:37:34.461 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 6S92461 with required changes 5.57.
</output>
            </test>
            <test duration="623" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="40 =&gt; image=test_040.jpg extpected=RK101AO" status="passed">
                <output type="stdout">23:37:35.084 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a1c4f69 with form slovensko_nova and offset 0.
23:37:35.084 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IX701I0 with required changes 1.3770661.
23:37:35.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a1c4f69 with form ceskoslovenska_novsia and offset 0.
23:37:35.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IXT0140 with required changes 1.3743382.
23:37:35.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@a1c4f69 with form ceska_nova and offset 0.
23:37:35.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4K70140 with required changes 5.395313.
23:37:35.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IX701I0 with required changes 1.3770661.
23:37:35.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : IXT0140 with required changes 1.3743382.
23:37:35.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 4K70140 with required changes 5.395313.
</output>
            </test>
            <test duration="390" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="41 =&gt; image=test_041.jpg extpected=LM025BD" status="passed">
                <output type="stdout">23:37:35.475 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@765d67dd with form slovensko_nova and offset 0.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding FL102GB with required changes 2.5782614.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@765d67dd with form slovensko_nova and offset 1.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding LM025BD with required changes 0.0.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@765d67dd with form ceskoslovenska_novsia and offset 0.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding FLM0258 with required changes 1.234747.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@765d67dd with form ceskoslovenska_novsia and offset 1.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding LM02580 with required changes 2.396008.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@765d67dd with form ceska_nova and offset 0.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 5L10258 with required changes 3.9878082.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@765d67dd with form ceska_nova and offset 1.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0M02580 with required changes 3.774897.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : FL102GB with required changes 2.5782614.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : LM025BD with required changes 0.0.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : FLM0258 with required changes 1.234747.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : LM02580 with required changes 2.396008.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 5L10258 with required changes 3.9878082.
23:37:35.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 0M02580 with required changes 3.774897.
</output>
            </test>
            <test duration="377" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="42 =&gt; image=test_042.jpg extpected=BA28IM" status="passed">
                <output type="stdout">23:37:35.853 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@73f0b216 with form slovensko_nova and offset 0.
23:37:35.853 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IB428SI with required changes 2.5942686.
23:37:35.853 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@73f0b216 with form slovensko_nova and offset 1.
23:37:35.853 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BA288IM with required changes 0.0.
23:37:35.853 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@73f0b216 with form ceskoslovenska_novsia and offset 0.
23:37:35.853 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IBA2888 with required changes 1.45.
23:37:35.853 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@73f0b216 with form ceskoslovenska_novsia and offset 1.
23:37:35.853 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BAZ8881 with required changes 4.15876.
23:37:35.853 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@73f0b216 with form ceska_nova and offset 0.
23:37:35.853 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8B42888 with required changes 4.1724415.
23:37:35.853 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@73f0b216 with form ceska_nova and offset 1.
23:37:35.853 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8A28881 with required changes 4.0761037.
23:37:35.853 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IB428SI with required changes 2.5942686.
23:37:35.853 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : BA288IM with required changes 0.0.
23:37:35.854 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IBA2888 with required changes 1.45.
23:37:35.854 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : BAZ8881 with required changes 4.15876.
23:37:35.854 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 8B42888 with required changes 4.1724415.
23:37:35.854 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 8A28881 with required changes 4.0761037.
</output>
            </test>
            <test duration="432" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="43 =&gt; image=test_043.jpg extpected=DK41AH" status="passed">
                <output type="stdout">23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@11f752d1 with form slovensko_nova and offset 0.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ID664QA with required changes 4.08.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@11f752d1 with form slovensko_nova and offset 1.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding DK641AH with required changes 1.16.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@11f752d1 with form ceskoslovenska_novsia and offset 0.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IDK6414 with required changes 2.4899998.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@11f752d1 with form ceskoslovenska_novsia and offset 1.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding DKG4148 with required changes 2.6699998.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@11f752d1 with form ceska_nova and offset 0.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8U66414 with required changes 6.5699997.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@11f752d1 with form ceska_nova and offset 1.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0K64148 with required changes 4.91.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : ID664QA with required changes 4.08.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : DK641AH with required changes 1.16.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IDK6414 with required changes 2.4899998.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : DKG4148 with required changes 2.6699998.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 8U66414 with required changes 6.5699997.
23:37:36.287 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 0K64148 with required changes 4.91.
</output>
            </test>
            <test duration="519" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="44 =&gt; image=test_044.jpg extpected=RK878AC" status="passed">
                <output type="stdout">23:37:36.808 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@696a6506 with form slovensko_nova and offset 0.
23:37:36.808 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK878AC with required changes 0.0.
23:37:36.808 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@696a6506 with form ceskoslovenska_novsia and offset 0.
23:37:36.808 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK07845 with required changes 3.833846.
23:37:36.808 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@696a6506 with form ceska_nova and offset 0.
23:37:36.808 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6K87845 with required changes 3.96.
23:37:36.808 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK878AC with required changes 0.0.
23:37:36.808 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK07845 with required changes 3.833846.
23:37:36.808 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 6K87845 with required changes 3.96.
</output>
            </test>
            <test duration="1032" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="45 =&gt; image=test_045.jpg extpected=RK878AC" status="passed">
                <output type="stdout">23:37:37.840 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@741687d4 with form slovensko_nova and offset 0.
23:37:37.840 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK878AC with required changes 0.0.
23:37:37.840 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@741687d4 with form ceskoslovenska_novsia and offset 0.
23:37:37.840 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK07840 with required changes 3.881962.
23:37:37.840 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@741687d4 with form ceska_nova and offset 0.
23:37:37.841 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K87840 with required changes 3.9218147.
23:37:37.841 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK878AC with required changes 0.0.
23:37:37.841 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK07840 with required changes 3.881962.
23:37:37.841 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K87840 with required changes 3.9218147.
</output>
            </test>
            <test duration="433" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="46 =&gt; image=test_046.jpg extpected=RK143AT" status="passed">
                <output type="stdout">23:37:38.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@31f90517 with form slovensko_nova and offset 0.
23:37:38.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK143AT with required changes 1.3186398.
23:37:38.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@31f90517 with form ceskoslovenska_novsia and offset 0.
23:37:38.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKI4347 with required changes 2.5017498.
23:37:38.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@31f90517 with form ceska_nova and offset 0.
23:37:38.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 9K14347 with required changes 5.1479516.
23:37:38.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK143AT with required changes 1.3186398.
23:37:38.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKI4347 with required changes 2.5017498.
23:37:38.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 9K14347 with required changes 5.1479516.
</output>
            </test>
            <test duration="412" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="47 =&gt; image=test_047.jpg extpected=RK161AG" status="passed">
                <output type="stdout">23:37:38.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4eb69e8d with form slovensko_nova and offset 0.
23:37:38.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK181AG with required changes 0.0.
23:37:38.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4eb69e8d with form ceskoslovenska_novsia and offset 0.
23:37:38.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKJ8140 with required changes 3.9642174.
23:37:38.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4eb69e8d with form ceska_nova and offset 0.
23:37:38.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K18140 with required changes 3.8851857.
23:37:38.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK181AG with required changes 0.0.
23:37:38.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKJ8140 with required changes 3.9642174.
23:37:38.687 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K18140 with required changes 3.8851857.
</output>
            </test>
            <test duration="397" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="48 =&gt; image=test_048.jpg extpected=RK161AG" status="passed">
                <output type="stdout">23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@221961f2 with form slovensko_nova and offset 0.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK416MA with required changes 2.7120337.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@221961f2 with form slovensko_nova and offset 1.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KI161AG with required changes 0.0.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@221961f2 with form ceskoslovenska_novsia and offset 0.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKI1614 with required changes 1.306024.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@221961f2 with form ceskoslovenska_novsia and offset 1.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KII6148 with required changes 3.9397411.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@221961f2 with form ceska_nova and offset 0.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K41614 with required changes 3.9838712.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@221961f2 with form ceska_nova and offset 1.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4A16148 with required changes 5.2841315.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK416MA with required changes 2.7120337.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : KI161AG with required changes 0.0.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : RKI1614 with required changes 1.306024.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : KII6148 with required changes 3.9397411.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 8K41614 with required changes 3.9838712.
23:37:39.085 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 4A16148 with required changes 5.2841315.
</output>
            </test>
            <test duration="826" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="49 =&gt; image=test_049.jpg extpected=KMBORAK" status="passed">
                <output type="stdout">23:37:39.911 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@135f760a with form slovensko_nova and offset 0.
23:37:39.911 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KM606AK with required changes 2.5633714.
23:37:39.911 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@135f760a with form slovensko_nova and offset 1.
23:37:39.911 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MB064KJ with required changes 3.9014845.
23:37:39.911 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@135f760a with form ceskoslovenska_novsia and offset 0.
23:37:39.911 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding KMB0646 with required changes 4.122201.
23:37:39.911 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@135f760a with form ceskoslovenska_novsia and offset 1.
23:37:39.911 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MB06463 with required changes 4.122201.
23:37:39.911 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@135f760a with form ceska_nova and offset 0.
23:37:39.911 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4M60646 with required changes 6.761915.
23:37:39.911 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@135f760a with form ceska_nova and offset 1.
23:37:39.911 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0B06463 with required changes 5.4920683.
23:37:39.911 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : KM606AK with required changes 2.5633714.
23:37:39.911 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : MB064KJ with required changes 3.9014845.
23:37:39.912 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : KMB0646 with required changes 4.122201.
23:37:39.912 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : MB06463 with required changes 4.122201.
23:37:39.912 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 4M60646 with required changes 6.761915.
23:37:39.912 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 0B06463 with required changes 5.4920683.
</output>
            </test>
            <test duration="621" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="50 =&gt; image=test_050.jpg extpected=BB135BO" status="failed">
                <output type="stderr">java.lang.AssertionError: 
Expected: is not null
     but: was null
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">is not null
     
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">null
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls(RecognitionAllIT.java:177)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="356" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="51 =&gt; image=test_051.jpg extpected=RK605AB" status="passed">
                <output type="stdout">23:37:40.898 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@437a4e61 with form slovensko_nova and offset 0.
23:37:40.898 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK605AI with required changes 1.1486803.
23:37:40.898 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@437a4e61 with form ceskoslovenska_novsia and offset 0.
23:37:40.898 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG0548 with required changes 4.979673.
23:37:40.898 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@437a4e61 with form ceska_nova and offset 0.
23:37:40.898 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K60548 with required changes 5.203043.
23:37:40.898 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK605AI with required changes 1.1486803.
23:37:40.898 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG0548 with required changes 4.979673.
23:37:40.898 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K60548 with required changes 5.203043.
</output>
            </test>
            <test duration="350" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="52 =&gt; image=test_052.jpg extpected=BY649AG" status="passed">
                <output type="stdout">23:37:41.250 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4d0b8b8b with form slovensko_nova and offset 0.
23:37:41.250 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0Y849AL with required changes 2.73.
23:37:41.250 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4d0b8b8b with form ceskoslovenska_novsia and offset 0.
23:37:41.250 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0YG4944 with required changes 3.9599998.
23:37:41.250 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4d0b8b8b with form ceska_nova and offset 0.
23:37:41.250 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8Z84944 with required changes 2.75.
23:37:41.250 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : 0Y849AL with required changes 2.73.
23:37:41.250 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : 0YG4944 with required changes 3.9599998.
23:37:41.250 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8Z84944 with required changes 2.75.
</output>
            </test>
            <test duration="369" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="53 =&gt; image=test_053.jpg extpected=RK715AA" status="passed">
                <output type="stdout">23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3c5d183 with form slovensko_nova and offset 0.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IR471SA with required changes 2.798674.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3c5d183 with form slovensko_nova and offset 1.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK718AA with required changes 0.0.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3c5d183 with form ceskoslovenska_novsia and offset 0.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IRK7184 with required changes 1.3821778.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3c5d183 with form ceskoslovenska_novsia and offset 1.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKZ1844 with required changes 3.9778666.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3c5d183 with form ceska_nova and offset 0.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 5S47184 with required changes 5.7733665.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3c5d183 with form ceska_nova and offset 1.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K71844 with required changes 4.1384673.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IR471SA with required changes 2.798674.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK718AA with required changes 0.0.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IRK7184 with required changes 1.3821778.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : RKZ1844 with required changes 3.9778666.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 5S47184 with required changes 5.7733665.
23:37:41.620 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 2K71844 with required changes 4.1384673.
</output>
            </test>
            <test duration="327" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="54 =&gt; image=test_054.jpg extpected=RK22AH" status="passed">
                <output type="stdout">23:37:41.947 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7314f4cb with form slovensko_nova and offset 0.
23:37:41.948 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding HK282AL with required changes 0.0.
23:37:41.948 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7314f4cb with form ceskoslovenska_novsia and offset 0.
23:37:41.949 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding HKZ8246 with required changes 4.06.
23:37:41.949 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7314f4cb with form ceska_nova and offset 0.
23:37:41.949 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K28246 with required changes 4.16.
23:37:41.949 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : HK282AL with required changes 0.0.
23:37:41.949 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : HKZ8246 with required changes 4.06.
23:37:41.949 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K28246 with required changes 4.16.
</output>
            </test>
            <test duration="335" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="55 =&gt; image=test_055.jpg extpected=NO450AM" status="passed">
                <output type="stdout">23:37:42.285 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4b024fb2 with form slovensko_nova and offset 0.
23:37:42.285 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding N0450AM with required changes 0.0.
23:37:42.285 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4b024fb2 with form ceskoslovenska_novsia and offset 0.
23:37:42.285 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding N0A5046 with required changes 3.9857779.
23:37:42.285 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4b024fb2 with form ceska_nova and offset 0.
23:37:42.285 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0U45046 with required changes 5.2321773.
23:37:42.285 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : N0450AM with required changes 0.0.
23:37:42.285 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : N0A5046 with required changes 3.9857779.
23:37:42.285 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 0U45046 with required changes 5.2321773.
</output>
            </test>
            <test duration="564" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="56 =&gt; image=test_056.jpg extpected=RK300AG" status="failed">
                <output type="stderr">java.lang.AssertionError: 
Expected: is not null
     but: was null
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">is not null
     
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">null
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls(RecognitionAllIT.java:177)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="908" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="57 =&gt; image=test_057.jpg extpected=RK300AS" status="passed">
                <output type="stdout">23:37:43.764 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5cc85ffc with form slovensko_nova and offset 0.
23:37:43.764 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK300AS with required changes 1.0868248.
23:37:43.764 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5cc85ffc with form ceskoslovenska_novsia and offset 0.
23:37:43.764 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKB0043 with required changes 4.9424267.
23:37:43.764 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5cc85ffc with form ceska_nova and offset 0.
23:37:43.764 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 7K30043 with required changes 5.0253835.
23:37:43.764 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK300AS with required changes 1.0868248.
23:37:43.764 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKB0043 with required changes 4.9424267.
23:37:43.764 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 7K30043 with required changes 5.0253835.
</output>
            </test>
            <test duration="560" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="58 =&gt; image=test_058.jpg extpected=RK485AF" status="passed">
                <output type="stdout">23:37:44.324 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@37ecc472 with form slovensko_nova and offset 0.
23:37:44.325 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK485AF with required changes 1.2550395.
23:37:44.325 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@37ecc472 with form ceskoslovenska_novsia and offset 0.
23:37:44.325 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKA8546 with required changes 5.2726035.
23:37:44.325 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@37ecc472 with form ceska_nova and offset 0.
23:37:44.325 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0K48546 with required changes 5.333389.
23:37:44.325 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK485AF with required changes 1.2550395.
23:37:44.325 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKA8546 with required changes 5.2726035.
23:37:44.325 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 0K48546 with required changes 5.333389.
</output>
            </test>
            <test duration="328" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="59 =&gt; image=test_059.jpg extpected=BA302OZ" status="passed">
                <output type="stdout">23:37:44.653 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6d0d5147 with form slovensko_nova and offset 0.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IB430Z0 with required changes 2.5838442.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6d0d5147 with form slovensko_nova and offset 1.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BA3020Z with required changes 0.0.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6d0d5147 with form ceskoslovenska_novsia and offset 0.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IBA3020 with required changes 0.0.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6d0d5147 with form ceskoslovenska_novsia and offset 1.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BAQ0202 with required changes 2.5658045.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6d0d5147 with form ceska_nova and offset 0.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 5B43020 with required changes 2.7150922.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6d0d5147 with form ceska_nova and offset 1.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6A30202 with required changes 2.6208444.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IB430Z0 with required changes 2.5838442.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : BA3020Z with required changes 0.0.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IBA3020 with required changes 0.0.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : BAQ0202 with required changes 2.5658045.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 5B43020 with required changes 2.7150922.
23:37:44.654 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 6A30202 with required changes 2.6208444.
</output>
            </test>
            <test duration="393" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="60 =&gt; image=test_060.jpg extpected=BA302OZ" status="passed">
                <output type="stdout">23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@58f27c37 with form slovensko_nova and offset 0.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IA3020Z with required changes 0.0.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@58f27c37 with form slovensko_nova and offset 1.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AV020ZJ with required changes 2.638817.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@58f27c37 with form ceskoslovenska_novsia and offset 0.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IAV0202 with required changes 2.723817.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@58f27c37 with form ceskoslovenska_novsia and offset 1.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AV02021 with required changes 2.723817.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@58f27c37 with form ceska_nova and offset 0.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4A30202 with required changes 2.7200992.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@58f27c37 with form ceska_nova and offset 1.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4J02021 with required changes 4.0563765.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IA3020Z with required changes 0.0.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : AV020ZJ with required changes 2.638817.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IAV0202 with required changes 2.723817.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : AV02021 with required changes 2.723817.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 4A30202 with required changes 2.7200992.
23:37:45.047 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 4J02021 with required changes 4.0563765.
</output>
            </test>
            <test duration="347" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="61 =&gt; image=test_061.jpg extpected=MT456BJ" status="passed">
                <output type="stdout">23:37:45.396 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3003d288 with form slovensko_nova and offset 0.
23:37:45.396 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MT458IJ with required changes 1.28.
23:37:45.396 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3003d288 with form ceskoslovenska_novsia and offset 0.
23:37:45.396 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MTX5883 with required changes 2.6533918.
23:37:45.396 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3003d288 with form ceska_nova and offset 0.
23:37:45.396 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8T45883 with required changes 2.7062254.
23:37:45.396 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : MT458IJ with required changes 1.28.
23:37:45.396 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : MTX5883 with required changes 2.6533918.
23:37:45.396 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8T45883 with required changes 2.7062254.
</output>
            </test>
            <test duration="350" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="62 =&gt; image=test_062.jpg extpected=1B80338" status="passed">
                <output type="stdout">23:37:45.747 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@75dc995f with form slovensko_nova and offset 0.
23:37:45.747 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding QD883SS with required changes 5.21.
23:37:45.747 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@75dc995f with form ceskoslovenska_novsia and offset 0.
23:37:45.747 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding QD08338 with required changes 3.97.
23:37:45.747 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@75dc995f with form ceska_nova and offset 0.
23:37:45.747 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1B88338 with required changes 1.27.
23:37:45.747 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : QD883SS with required changes 5.21.
23:37:45.747 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : QD08338 with required changes 3.97.
23:37:45.747 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 1B88338 with required changes 1.27.
</output>
            </test>
            <test duration="408" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="63 =&gt; image=test_063.jpg extpected=1B25790" status="passed">
                <output type="stdout">23:37:46.156 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@71077d1 with form slovensko_nova and offset 0.
23:37:46.156 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MD2870Q with required changes 5.0943623.
23:37:46.156 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@71077d1 with form ceskoslovenska_novsia and offset 0.
23:37:46.156 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MDZ8790 with required changes 6.2511477.
23:37:46.156 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@71077d1 with form ceska_nova and offset 0.
23:37:46.156 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1B28790 with required changes 3.6675184.
23:37:46.156 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : MD2870Q with required changes 5.0943623.
23:37:46.156 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : MDZ8790 with required changes 6.2511477.
23:37:46.156 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 1B28790 with required changes 3.6675184.
</output>
            </test>
            <test duration="416" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="64 =&gt; image=test_064.jpg extpected=BZM2227" status="passed">
                <output type="stdout">23:37:46.571 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5fe80760 with form slovensko_nova and offset 0.
23:37:46.571 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BZ122ZZ with required changes 3.8243926.
23:37:46.571 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5fe80760 with form ceskoslovenska_novsia and offset 0.
23:37:46.571 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BZM2227 with required changes 2.506172.
23:37:46.571 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5fe80760 with form ceska_nova and offset 0.
23:37:46.572 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8Z12227 with required changes 5.143947.
23:37:46.572 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : BZ122ZZ with required changes 3.8243926.
23:37:46.572 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : BZM2227 with required changes 2.506172.
23:37:46.572 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8Z12227 with required changes 5.143947.
</output>
            </test>
            <test duration="369" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="65 =&gt; image=test_065.jpg extpected=4B04979" status="passed">
                <output type="stdout">23:37:46.944 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3f4b59fd with form slovensko_nova and offset 0.
23:37:46.944 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AI848ZQ with required changes 5.2239103.
23:37:46.944 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3f4b59fd with form ceskoslovenska_novsia and offset 0.
23:37:46.944 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AIQ4879 with required changes 3.8989334.
23:37:46.944 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3f4b59fd with form ceska_nova and offset 0.
23:37:46.944 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4B84879 with required changes 3.9258258.
23:37:46.944 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : AI848ZQ with required changes 5.2239103.
23:37:46.944 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : AIQ4879 with required changes 3.8989334.
23:37:46.944 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 4B84879 with required changes 3.9258258.
</output>
            </test>
            <test duration="367" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="66 =&gt; image=test_066.jpg extpected=BSE5579" status="passed">
                <output type="stdout">23:37:47.312 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4e739968 with form slovensko_nova and offset 0.
23:37:47.312 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BS655ZI with required changes 5.1166162.
23:37:47.312 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4e739968 with form ceskoslovenska_novsia and offset 0.
23:37:47.312 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding BSE5578 with required changes 1.2578045.
23:37:47.312 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4e739968 with form ceska_nova and offset 0.
23:37:47.312 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8S65578 with required changes 1.2830142.
23:37:47.312 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : BS655ZI with required changes 5.1166162.
23:37:47.312 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : BSE5578 with required changes 1.2578045.
23:37:47.312 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8S65578 with required changes 1.2830142.
</output>
            </test>
            <test duration="519" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="67 =&gt; image=test_067.jpg extpected=1B70440" status="passed">
                <output type="stdout">23:37:47.831 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@55c75b72 with form slovensko_nova and offset 0.
23:37:47.831 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MD704A0 with required changes 2.715294.
23:37:47.831 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@55c75b72 with form ceskoslovenska_novsia and offset 0.
23:37:47.831 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding MDZ0440 with required changes 2.6240177.
23:37:47.831 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@55c75b72 with form ceska_nova and offset 0.
23:37:47.831 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1B70440 with required changes 1.2543757.
23:37:47.831 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : MD704A0 with required changes 2.715294.
23:37:47.831 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : MDZ0440 with required changes 2.6240177.
23:37:47.831 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 1B70440 with required changes 1.2543757.
</output>
            </test>
            <test duration="390" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="68 =&gt; image=test_068.jpg extpected=1B19839" status="passed">
                <output type="stdout">23:37:48.223 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@25f3207e with form slovensko_nova and offset 0.
23:37:48.223 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding QB198S0 with required changes 3.9630742.
23:37:48.223 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@25f3207e with form ceskoslovenska_novsia and offset 0.
23:37:48.223 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding QBQ9839 with required changes 2.8000002.
23:37:48.223 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@25f3207e with form ceska_nova and offset 0.
23:37:48.223 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1B19839 with required changes 0.0.
23:37:48.223 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : QB198S0 with required changes 3.9630742.
23:37:48.223 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : QBQ9839 with required changes 2.8000002.
23:37:48.223 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 1B19839 with required changes 0.0.
</output>
            </test>
            <test duration="420" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="69 =&gt; image=test_069.jpg extpected=4B40262" status="passed">
                <output type="stdout">23:37:48.644 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7b5afde5 with form slovensko_nova and offset 0.
23:37:48.644 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AB482IZ with required changes 5.268625.
23:37:48.644 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7b5afde5 with form ceskoslovenska_novsia and offset 0.
23:37:48.644 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ABA8282 with required changes 3.9218872.
23:37:48.644 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7b5afde5 with form ceska_nova and offset 0.
23:37:48.644 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4B48282 with required changes 1.3322921.
23:37:48.644 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : AB482IZ with required changes 5.268625.
23:37:48.644 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : ABA8282 with required changes 3.9218872.
23:37:48.644 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 4B48282 with required changes 1.3322921.
</output>
            </test>
            <test duration="345" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="70 =&gt; image=test_070.jpg extpected=2T40211" status="passed">
                <output type="stdout">23:37:48.990 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3dcf26b5 with form slovensko_nova and offset 0.
23:37:48.990 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ZT482QM with required changes 5.4584627.
23:37:48.990 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3dcf26b5 with form ceskoslovenska_novsia and offset 0.
23:37:48.990 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ZTA8211 with required changes 4.0184627.
23:37:48.990 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3dcf26b5 with form ceska_nova and offset 0.
23:37:48.990 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2T48211 with required changes 1.3552326.
23:37:48.990 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : ZT482QM with required changes 5.4584627.
23:37:48.990 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : ZTA8211 with required changes 4.0184627.
23:37:48.990 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2T48211 with required changes 1.3552326.
</output>
            </test>
            <test duration="390" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="71 =&gt; image=test_071.jpg extpected=1Z75233" status="passed">
                <output type="stdout">23:37:49.384 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2d6161b9 with form slovensko_nova and offset 0.
23:37:49.384 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding NZ75200 with required changes 5.371964.
23:37:49.384 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2d6161b9 with form ceskoslovenska_novsia and offset 0.
23:37:49.384 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding NZZ5233 with required changes 1.4.
23:37:49.384 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@2d6161b9 with form ceska_nova and offset 0.
23:37:49.384 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1Z75233 with required changes 1.36.
23:37:49.384 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : NZ75200 with required changes 5.371964.
23:37:49.384 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : NZZ5233 with required changes 1.4.
23:37:49.384 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 1Z75233 with required changes 1.36.
</output>
            </test>
            <test duration="357" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="72 =&gt; image=test_072.jpg extpected=4B39376" status="passed">
                <output type="stdout">23:37:49.739 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3653bb61 with form slovensko_nova and offset 0.
23:37:49.739 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AB393ZG with required changes 3.828688.
23:37:49.739 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3653bb61 with form slovensko_nova and offset 1.
23:37:49.739 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding B0937GI with required changes 2.60609.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3653bb61 with form slovensko_nova and offset 2.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 00378II with required changes 2.5430143.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3653bb61 with form slovensko_nova and offset 3.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0Q781II with required changes 3.9800787.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3653bb61 with form ceskoslovenska_novsia and offset 0.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AB09378 with required changes 2.5853033.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3653bb61 with form ceskoslovenska_novsia and offset 1.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding B003781 with required changes 3.9330144.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3653bb61 with form ceskoslovenska_novsia and offset 2.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 00Q7817 with required changes 6.6867237.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3653bb61 with form ceskoslovenska_novsia and offset 3.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0QZ8178 with required changes 8.077032.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3653bb61 with form ceska_nova and offset 0.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4B39378 with required changes 0.0.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3653bb61 with form ceska_nova and offset 1.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8J93781 with required changes 3.9630141.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3653bb61 with form ceska_nova and offset 2.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 3S37817 with required changes 4.093631.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3653bb61 with form ceska_nova and offset 3.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 9S78178 with required changes 5.6336308.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : AB393ZG with required changes 3.828688.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : B0937GI with required changes 2.60609.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 00378II with required changes 2.5430143.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : 0Q781II with required changes 3.9800787.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : AB09378 with required changes 2.5853033.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : B003781 with required changes 3.9330144.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 6 : 00Q7817 with required changes 6.6867237.
23:37:49.740 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 7 : 0QZ8178 with required changes 8.077032.
23:37:49.744 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 8 : 4B39378 with required changes 0.0.
23:37:49.745 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 9 : 8J93781 with required changes 3.9630141.
23:37:49.745 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 10 : 3S37817 with required changes 4.093631.
23:37:49.745 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 11 : 9S78178 with required changes 5.6336308.
</output>
            </test>
            <test duration="497" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="73 =&gt; image=test_073.jpg extpected=3B97236" status="passed">
                <output type="stdout">23:37:50.243 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4ff1f872 with form slovensko_nova and offset 0.
23:37:50.243 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0B972QG with required changes 3.8277106.
23:37:50.243 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4ff1f872 with form ceskoslovenska_novsia and offset 0.
23:37:50.243 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0BQ7238 with required changes 2.6122878.
23:37:50.243 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4ff1f872 with form ceska_nova and offset 0.
23:37:50.243 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 3B97238 with required changes 0.0.
23:37:50.243 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : 0B972QG with required changes 3.8277106.
23:37:50.243 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : 0BQ7238 with required changes 2.6122878.
23:37:50.243 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 3B97238 with required changes 0.0.
</output>
            </test>
            <test duration="400" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="74 =&gt; image=test_074.jpg extpected=3B29485" status="passed">
                <output type="stdout">23:37:50.645 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@c6c5b66 with form slovensko_nova and offset 0.
23:37:50.645 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding QD294IG with required changes 4.9945474.
23:37:50.645 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@c6c5b66 with form ceskoslovenska_novsia and offset 0.
23:37:50.645 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding QDZ9485 with required changes 3.7753234.
23:37:50.645 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@c6c5b66 with form ceska_nova and offset 0.
23:37:50.645 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 1B29485 with required changes 1.2648135.
23:37:50.645 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : QD294IG with required changes 4.9945474.
23:37:50.645 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : QDZ9485 with required changes 3.7753234.
23:37:50.645 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 1B29485 with required changes 1.2648135.
</output>
            </test>
            <test duration="406" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="75 =&gt; image=test_075.jpg extpected=ZA834CO" status="passed">
                <output type="stdout">23:37:51.051 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@35216a2e with form slovensko_nova and offset 0.
23:37:51.051 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ZA834CF with required changes 1.3199999.
23:37:51.051 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@35216a2e with form ceskoslovenska_novsia and offset 0.
23:37:51.051 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding ZAQ3406 with required changes 5.266115.
23:37:51.051 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@35216a2e with form ceska_nova and offset 0.
23:37:51.051 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 7A83406 with required changes 5.252365.
23:37:51.051 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : ZA834CF with required changes 1.3199999.
23:37:51.051 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : ZAQ3406 with required changes 5.266115.
23:37:51.051 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 7A83406 with required changes 5.252365.
</output>
            </test>
            <test duration="383" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="76 =&gt; image=test_076.jpg extpected=4B21875" status="passed">
                <output type="stdout">23:37:51.436 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5b20024b with form slovensko_nova and offset 0.
23:37:51.437 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding AP218ZG with required changes 3.9048405.
23:37:51.437 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5b20024b with form ceskoslovenska_novsia and offset 0.
23:37:51.437 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding APZ1825 with required changes 2.6533275.
23:37:51.437 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5b20024b with form ceska_nova and offset 0.
23:37:51.437 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 4P21825 with required changes 2.5845408.
23:37:51.437 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : AP218ZG with required changes 3.9048405.
23:37:51.437 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : APZ1825 with required changes 2.6533275.
23:37:51.437 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 4P21825 with required changes 2.5845408.
</output>
            </test>
            <test duration="387" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="77 =&gt; image=test_077.jpg extpected=RK735AS" status="passed">
                <output type="stdout">23:37:51.824 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6bbb3ec8 with form slovensko_nova and offset 0.
23:37:51.824 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK735AS with required changes 0.0.
23:37:51.824 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6bbb3ec8 with form ceskoslovenska_novsia and offset 0.
23:37:51.824 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKT3549 with required changes 3.735478.
23:37:51.824 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6bbb3ec8 with form ceska_nova and offset 0.
23:37:51.824 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6K73549 with required changes 3.8399897.
23:37:51.824 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK735AS with required changes 0.0.
23:37:51.824 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKT3549 with required changes 3.735478.
23:37:51.824 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 6K73549 with required changes 3.8399897.
</output>
            </test>
            <test duration="381" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="78 =&gt; image=test_078.jpg extpected=RK457AS" status="passed">
                <output type="stdout">23:37:52.206 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1911427a with form slovensko_nova and offset 0.
23:37:52.206 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK457AS with required changes 0.0.
23:37:52.207 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1911427a with form ceskoslovenska_novsia and offset 0.
23:37:52.207 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKA5745 with required changes 3.671724.
23:37:52.207 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@1911427a with form ceska_nova and offset 0.
23:37:52.207 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K45745 with required changes 3.7459424.
23:37:52.207 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK457AS with required changes 0.0.
23:37:52.207 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKA5745 with required changes 3.671724.
23:37:52.207 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K45745 with required changes 3.7459424.
</output>
            </test>
            <test duration="387" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="79 =&gt; image=test_079.jpg extpected=RK959AF" status="passed">
                <output type="stdout">23:37:52.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d91e9c9 with form slovensko_nova and offset 0.
23:37:52.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK959AF with required changes 0.0.
23:37:52.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d91e9c9 with form ceskoslovenska_novsia and offset 0.
23:37:52.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK05946 with required changes 3.8716006.
23:37:52.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7d91e9c9 with form ceska_nova and offset 0.
23:37:52.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K95946 with required changes 4.0074577.
23:37:52.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK959AF with required changes 0.0.
23:37:52.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK05946 with required changes 3.8716006.
23:37:52.594 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K95946 with required changes 4.0074577.
</output>
            </test>
            <test duration="455" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="80 =&gt; image=test_080.jpg extpected=RK003AB" status="passed">
                <output type="stdout">23:37:53.050 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@47ffce5d with form slovensko_nova and offset 0.
23:37:53.050 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK003AB with required changes 0.0.
23:37:53.050 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@47ffce5d with form ceskoslovenska_novsia and offset 0.
23:37:53.050 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK00346 with required changes 2.4890919.
23:37:53.050 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@47ffce5d with form ceska_nova and offset 0.
23:37:53.050 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K00346 with required changes 3.8088052.
23:37:53.050 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK003AB with required changes 0.0.
23:37:53.050 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK00346 with required changes 2.4890919.
23:37:53.050 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K00346 with required changes 3.8088052.
</output>
            </test>
            <test duration="435" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="81 =&gt; image=test_081.jpg extpected=RK641AL" status="passed">
                <output type="stdout">23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3f76c712 with form slovensko_nova and offset 0.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IR664IA with required changes 2.9300077.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3f76c712 with form slovensko_nova and offset 1.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK641AL with required changes 0.0.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3f76c712 with form ceskoslovenska_novsia and offset 0.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding IRK6414 with required changes 1.2662015.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3f76c712 with form ceskoslovenska_novsia and offset 1.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG4146 with required changes 3.8168745.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3f76c712 with form ceska_nova and offset 0.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 5P66414 with required changes 5.4255786.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3f76c712 with form ceska_nova and offset 1.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 9K64146 with required changes 4.0629478.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : IR664IA with required changes 2.9300077.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK641AL with required changes 0.0.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : IRK6414 with required changes 1.2662015.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : RKG4146 with required changes 3.8168745.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : 5P66414 with required changes 5.4255786.
23:37:53.487 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : 9K64146 with required changes 4.0629478.
</output>
            </test>
            <test duration="406" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="82 =&gt; image=test_082.jpg extpected=RK891AU" status="passed">
                <output type="stdout">23:37:53.898 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6245303e with form germany and offset 0.
23:37:53.898 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK0940 with required changes 3.688199.
23:37:53.898 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6245303e with form ceskoslovenska_starsia and offset 0.
23:37:53.898 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK8940 with required changes 2.4894173.
23:37:53.898 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK0940 with required changes 3.688199.
23:37:53.898 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK8940 with required changes 2.4894173.
</output>
            </test>
            <test duration="14155" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="83 =&gt; image=test_083.jpg extpected=PD935BG" status="failed">
                <output type="stderr">java.lang.AssertionError: 
Expected: is not null
     but: was null
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">is not null
     
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">null
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls(RecognitionAllIT.java:177)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="438" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="84 =&gt; image=test_084.jpg extpected=PD722BF" status="passed">
                <output type="stdout">23:38:08.495 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3e9c59ed with form slovensko_nova and offset 0.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding FP072ZB with required changes 2.4475155.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3e9c59ed with form slovensko_nova and offset 1.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding PD722BF with required changes 0.0.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3e9c59ed with form slovensko_nova and offset 2.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding DY228FJ with required changes 3.885491.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3e9c59ed with form ceskoslovenska_novsia and offset 0.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding FPD7228 with required changes 1.2834142.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3e9c59ed with form ceskoslovenska_novsia and offset 1.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding PDY2286 with required changes 3.922691.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3e9c59ed with form ceskoslovenska_novsia and offset 2.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding DYZ2861 with required changes 5.1755266.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3e9c59ed with form ceska_nova and offset 0.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 6P07228 with required changes 3.8438258.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3e9c59ed with form ceska_nova and offset 1.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8U72286 with required changes 5.2283936.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3e9c59ed with form ceska_nova and offset 2.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0T22861 with required changes 5.0613375.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : FP072ZB with required changes 2.4475155.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : PD722BF with required changes 0.0.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : DY228FJ with required changes 3.885491.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 3 : FPD7228 with required changes 1.2834142.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 4 : PDY2286 with required changes 3.922691.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 5 : DYZ2861 with required changes 5.1755266.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 6 : 6P07228 with required changes 3.8438258.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 7 : 8U72286 with required changes 5.2283936.
23:38:08.496 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 8 : 0T22861 with required changes 5.0613375.
</output>
            </test>
            <test duration="419" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="85 =&gt; image=test_085.jpg extpected=RK959AD" status="passed">
                <output type="stdout">23:38:08.915 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@39b752f4 with form slovensko_nova and offset 0.
23:38:08.915 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK959AD with required changes 0.0.
23:38:08.915 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@39b752f4 with form ceskoslovenska_novsia and offset 0.
23:38:08.915 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK05940 with required changes 3.6269999.
23:38:08.916 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@39b752f4 with form ceska_nova and offset 0.
23:38:08.916 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K95940 with required changes 3.7295775.
23:38:08.916 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK959AD with required changes 0.0.
23:38:08.916 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK05940 with required changes 3.6269999.
23:38:08.916 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K95940 with required changes 3.7295775.
</output>
            </test>
            <test duration="358" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="86 =&gt; image=test_086.jpg extpected=RK376AF" status="passed">
                <output type="stdout">23:38:09.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@74a680d3 with form slovensko_nova and offset 0.
23:38:09.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK376AF with required changes 0.0.
23:38:09.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@74a680d3 with form ceskoslovenska_novsia and offset 0.
23:38:09.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKS7645 with required changes 3.7357175.
23:38:09.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@74a680d3 with form ceska_nova and offset 0.
23:38:09.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0K37645 with required changes 3.833357.
23:38:09.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK376AF with required changes 0.0.
23:38:09.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKS7645 with required changes 3.7357175.
23:38:09.275 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 0K37645 with required changes 3.833357.
</output>
            </test>
            <test duration="391" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="87 =&gt; image=test_087.jpg extpected=RK011AM" status="passed">
                <output type="stdout">23:38:09.667 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@32e0b990 with form slovensko_nova and offset 0.
23:38:09.667 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK011AM with required changes 0.0.
23:38:09.667 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@32e0b990 with form ceskoslovenska_novsia and offset 0.
23:38:09.667 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK01140 with required changes 2.6930392.
23:38:09.667 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@32e0b990 with form ceska_nova and offset 0.
23:38:09.667 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 2K01140 with required changes 4.0091205.
23:38:09.667 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK011AM with required changes 0.0.
23:38:09.667 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK01140 with required changes 2.6930392.
23:38:09.667 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 2K01140 with required changes 4.0091205.
</output>
            </test>
            <test duration="368" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="88 =&gt; image=test_088.jpg extpected=LM169AM" status="passed">
                <output type="stdout">23:38:10.035 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5c0bacaa with form slovensko_nova and offset 0.
23:38:10.035 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding LM169AM with required changes 1.169828.
23:38:10.035 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5c0bacaa with form ceskoslovenska_novsia and offset 0.
23:38:10.035 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding LMQ6940 with required changes 5.190996.
23:38:10.035 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@5c0bacaa with form ceska_nova and offset 0.
23:38:10.035 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0M16940 with required changes 5.0943995.
23:38:10.035 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : LM169AM with required changes 1.169828.
23:38:10.035 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : LMQ6940 with required changes 5.190996.
23:38:10.035 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 0M16940 with required changes 5.0943995.
</output>
            </test>
            <test duration="420" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="89 =&gt; image=test_089.jpg extpected=RK565AV" status="passed">
                <output type="stdout">23:38:10.456 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7dfc0fda with form slovensko_nova and offset 0.
23:38:10.456 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK565AV with required changes 0.0.
23:38:10.456 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7dfc0fda with form ceskoslovenska_novsia and offset 0.
23:38:10.456 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG6547 with required changes 3.65773.
23:38:10.456 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@7dfc0fda with form ceska_nova and offset 0.
23:38:10.456 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 0K56547 with required changes 3.7942677.
23:38:10.456 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK565AV with required changes 0.0.
23:38:10.456 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG6547 with required changes 3.65773.
23:38:10.456 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 0K56547 with required changes 3.7942677.
</output>
            </test>
            <test duration="5164" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="90 =&gt; image=test_090.jpg extpected=RK550AO" status="failed">
                <output type="stderr">java.lang.AssertionError: 
Expected: is not null
     but: was null
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">is not null
     
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">null
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls(RecognitionAllIT.java:177)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="489" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="91 =&gt; image=test_091.jpg extpected=RK977AF" status="passed">
                <output type="stdout">23:38:16.114 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6b56e8ee with form slovensko_nova and offset 0.
23:38:16.114 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK977AF with required changes 0.0.
23:38:16.114 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6b56e8ee with form ceskoslovenska_novsia and offset 0.
23:38:16.114 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK07745 with required changes 3.69818.
23:38:16.114 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@6b56e8ee with form ceska_nova and offset 0.
23:38:16.114 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K97745 with required changes 3.9087965.
23:38:16.114 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK977AF with required changes 0.0.
23:38:16.114 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK07745 with required changes 3.69818.
23:38:16.114 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K97745 with required changes 3.9087965.
</output>
            </test>
            <test duration="361" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="92 =&gt; image=test_092.jpg extpected=RK373AK" status="passed">
                <output type="stdout">23:38:16.475 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@759c0c14 with form slovensko_nova and offset 0.
23:38:16.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK373AK with required changes 0.0.
23:38:16.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@759c0c14 with form ceskoslovenska_novsia and offset 0.
23:38:16.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK07346 with required changes 3.8996668.
23:38:16.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@759c0c14 with form ceska_nova and offset 0.
23:38:16.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K37346 with required changes 4.041884.
23:38:16.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK373AK with required changes 0.0.
23:38:16.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RK07346 with required changes 3.8996668.
23:38:16.476 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K37346 with required changes 4.041884.
</output>
            </test>
            <test duration="390" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="93 =&gt; image=test_093.jpg extpected=RK301AH" status="passed">
                <output type="stdout">23:38:16.867 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@743b4921 with form slovensko_nova and offset 0.
23:38:16.867 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK301AH with required changes 0.0.
23:38:16.867 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@743b4921 with form ceskoslovenska_novsia and offset 0.
23:38:16.867 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKS0148 with required changes 3.8960931.
23:38:16.867 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@743b4921 with form ceska_nova and offset 0.
23:38:16.867 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K30148 with required changes 4.0111513.
23:38:16.867 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK301AH with required changes 0.0.
23:38:16.867 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKS0148 with required changes 3.8960931.
23:38:16.867 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K30148 with required changes 4.0111513.
</output>
            </test>
            <test duration="636" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="94 =&gt; image=test_094.jpg extpected=RK069AV" status="failed">
                <output type="stderr">java.lang.AssertionError: 
Expected: is not null
     but: was null
</output>
                <output type="stdout">Expected :
</output>
                <output type="stderr">is not null
     
</output>
                <output type="stdout">Actual   :
</output>
                <output type="stderr">null
 
&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls(RecognitionAllIT.java:177)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$0(HierarchicalTestExecutor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:133)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:101)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:375)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:591)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1494)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:101)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:430)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:65)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
            </test>
            <test duration="396" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="95 =&gt; image=test_095.jpg extpected=NO626AT" status="passed">
                <output type="stdout">23:38:17.904 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3a2f4611 with form germany and offset 0.
23:38:17.905 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding N0G264 with required changes 2.4363954.
23:38:17.905 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@3a2f4611 with form ceskoslovenska_starsia and offset 0.
23:38:17.905 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding N06264 with required changes 1.2683381.
23:38:17.905 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : N0G264 with required changes 2.4363954.
23:38:17.905 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : N06264 with required changes 1.2683381.
</output>
            </test>
            <test duration="379" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="96 =&gt; image=test_096.jpg extpected=RK735AS" status="passed">
                <output type="stdout">23:38:18.286 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@60f10f6a with form slovensko_nova and offset 0.
23:38:18.286 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK735AS with required changes 0.0.
23:38:18.286 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@60f10f6a with form ceskoslovenska_novsia and offset 0.
23:38:18.286 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKV3548 with required changes 3.7464986.
23:38:18.286 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@60f10f6a with form ceska_nova and offset 0.
23:38:18.286 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K73548 with required changes 3.8082192.
23:38:18.286 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK735AS with required changes 0.0.
23:38:18.286 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKV3548 with required changes 3.7464986.
23:38:18.286 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K73548 with required changes 3.8082192.
</output>
            </test>
            <test duration="372" locationUrl="java:test://net.sf.javaanpr.test.RecognitionAllIT.checkSignsForNulls" name="97 =&gt; image=test_097.jpg extpected=RK603AV" status="passed">
                <output type="stdout">23:38:18.659 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4f283b8f with form slovensko_nova and offset 0.
23:38:18.659 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RK603AV with required changes 1.130477.
23:38:18.659 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4f283b8f with form ceskoslovenska_novsia and offset 0.
23:38:18.659 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding RKG0347 with required changes 2.594714.
23:38:18.659 [main] DEBUG n.s.j.intelligence.parser.Parser - Comparing net.sf.javaanpr.intelligence.RecognizedPlate@4f283b8f with form ceska_nova and offset 0.
23:38:18.659 [main] DEBUG n.s.j.intelligence.parser.Parser - Adding 8K60347 with required changes 5.1102314.
23:38:18.659 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 0 : RK603AV with required changes 1.130477.
23:38:18.659 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 1 : RKG0347 with required changes 2.594714.
23:38:18.659 [main] DEBUG n.s.j.intelligence.parser.Parser - Plate 2 : 8K60347 with required changes 5.1102314.
</output>
            </test>
        </suite>
    </suite>
</testrun>
